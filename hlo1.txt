HloModule train_step_pipeshard_parallel_mesh_1, input_output_alias={ {0}: (0, {}, may-alias), {1}: (1, {}, may-alias), {2}: (2, {}, may-alias), {3}: (3, {}, may-alias), {4}: (4, {}, may-alias), {5}: (5, {}, may-alias), {6}: (6, {}, may-alias), {7}: (7, {}, may-alias), {8}: (8, {}, may-alias), {9}: (9, {}, may-alias), {10}: (10, {}, may-alias), {11}: (11, {}, may-alias), {12}: (12, {}, may-alias), {13}: (13, {}, may-alias), {14}: (14, {}, may-alias), {15}: (15, {}, may-alias), {16}: (16, {}, may-alias), {17}: (17, {}, may-alias), {18}: (18, {}, may-alias), {19}: (19, {}, may-alias) }, entry_computation_layout={(f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, u16[4,640]{1,0}, pred[4,640]{1,0})->(f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=25*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=30*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=35*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=40*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, /*index=45*/f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, f16[4096]{0}, f16[4096,32000]{1,0}, f32[])}

%xla_fallback_pipeline_marker.139 (Arg_0.140: f32[4,640,11008], Arg_1.141: f16[4096,11008], Arg_2.142: f32[4,640,4096], Arg_3.143: f16[11008,4096], Arg_4.144: f32[4,640,4096], Arg_5.145: f16[4096], Arg_6.146: f16[4096,32000], Arg_7.147: u16[4,640], Arg_8.148: pred[4,640], Arg_9.149: f32[]) -> (f32[4,640,11008], f16[4096,11008], f32[4,640,4096], f16[11008,4096], f32[4,640,4096], /*index=5*/f16[4096], f16[4096,32000], u16[4,640], pred[4,640], f32[]) {
  %Arg_0.140 = f32[4,640,11008]{2,1,0} parameter(0)
  %Arg_1.141 = f16[4096,11008]{1,0} parameter(1)
  %Arg_2.142 = f32[4,640,4096]{2,1,0} parameter(2)
  %Arg_3.143 = f16[11008,4096]{1,0} parameter(3)
  %Arg_4.144 = f32[4,640,4096]{2,1,0} parameter(4)
  %Arg_5.145 = f16[4096]{0} parameter(5)
  %Arg_6.146 = f16[4096,32000]{1,0} parameter(6)
  %Arg_7.147 = u16[4,640]{1,0} parameter(7)
  %Arg_8.148 = pred[4,640]{1,0} parameter(8)
  %Arg_9.149 = f32[] parameter(9)
  %tuple.150 = (f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) tuple(f32[4,640,11008]{2,1,0} %Arg_0.140, f16[4096,11008]{1,0} %Arg_1.141, f32[4,640,4096]{2,1,0} %Arg_2.142, f16[11008,4096]{1,0} %Arg_3.143, f32[4,640,4096]{2,1,0} %Arg_4.144, /*index=5*/f16[4096]{0} %Arg_5.145, f16[4096,32000]{1,0} %Arg_6.146, u16[4,640]{1,0} %Arg_7.147, pred[4,640]{1,0} %Arg_8.148, f32[] %Arg_9.149), metadata={op_name="tuple.11"}
  ROOT %custom-call.151 = (f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) custom-call((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %tuple.150), custom_call_target="pipeline_marker", custom_call_has_side_effect=true, metadata={op_name="layer_1$start"}, backend_config="\000\000\270\006\000\000\000\000\000\000`\005\000\000\000\000\000\000\200\002\000\000\000\000\000\000`\005\000\000\000\000\000\000\200\002\000\000\000\000\000 \000\000\000\000\000\000\000\000\240\017\000\000\000\000\000\024\000\000\000\000\000\000\000\n\000\000\000\000\000\000\004\000\000\000\000\000\000\000"
}

%pipeline_marker.152 (Arg_0.153: f32[4,640,11008], Arg_1.154: f16[4096,11008], Arg_2.155: f32[4,640,4096], Arg_3.156: f16[11008,4096], Arg_4.157: f32[4,640,4096], Arg_5.158: f16[4096], Arg_6.159: f16[4096,32000], Arg_7.160: u16[4,640], Arg_8.161: pred[4,640], Arg_9.162: f32[]) -> (f32[4,640,11008], f16[4096,11008], f32[4,640,4096], f16[11008,4096], f32[4,640,4096], /*index=5*/f16[4096], f16[4096,32000], u16[4,640], pred[4,640], f32[]) {
  %Arg_0.153 = f32[4,640,11008]{2,1,0} parameter(0)
  %Arg_1.154 = f16[4096,11008]{1,0} parameter(1)
  %Arg_2.155 = f32[4,640,4096]{2,1,0} parameter(2)
  %Arg_3.156 = f16[11008,4096]{1,0} parameter(3)
  %Arg_4.157 = f32[4,640,4096]{2,1,0} parameter(4)
  %Arg_5.158 = f16[4096]{0} parameter(5)
  %Arg_6.159 = f16[4096,32000]{1,0} parameter(6)
  %Arg_7.160 = u16[4,640]{1,0} parameter(7)
  %Arg_8.161 = pred[4,640]{1,0} parameter(8)
  %Arg_9.162 = f32[] parameter(9)
  %call.163 = (f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) call(f32[4,640,11008]{2,1,0} %Arg_0.153, f16[4096,11008]{1,0} %Arg_1.154, f32[4,640,4096]{2,1,0} %Arg_2.155, f16[11008,4096]{1,0} %Arg_3.156, f32[4,640,4096]{2,1,0} %Arg_4.157, /*index=5*/f16[4096]{0} %Arg_5.158, f16[4096,32000]{1,0} %Arg_6.159, u16[4,640]{1,0} %Arg_7.160, pred[4,640]{1,0} %Arg_8.161, f32[] %Arg_9.162), to_apply=%xla_fallback_pipeline_marker.139
  %get-tuple-element.164 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.163), index=0, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=start]"}
  %get-tuple-element.165 = f16[4096,11008]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.163), index=1, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=start]"}
  %get-tuple-element.166 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.163), index=2, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=start]"}
  %get-tuple-element.167 = f16[11008,4096]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.163), index=3, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=start]"}
  %get-tuple-element.168 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.163), index=4, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=start]"}
  %get-tuple-element.169 = f16[4096]{0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.163), index=5, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=start]"}
  %get-tuple-element.170 = f16[4096,32000]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.163), index=6, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=start]"}
  %get-tuple-element.171 = u16[4,640]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.163), index=7, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=start]"}
  %get-tuple-element.172 = pred[4,640]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.163), index=8, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=start]"}
  %get-tuple-element.173 = f32[] get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.163), index=9, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=start]"}
  ROOT %tuple.174 = (f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) tuple(f32[4,640,11008]{2,1,0} %get-tuple-element.164, f16[4096,11008]{1,0} %get-tuple-element.165, f32[4,640,4096]{2,1,0} %get-tuple-element.166, f16[11008,4096]{1,0} %get-tuple-element.167, f32[4,640,4096]{2,1,0} %get-tuple-element.168, /*index=5*/f16[4096]{0} %get-tuple-element.169, f16[4096,32000]{1,0} %get-tuple-element.170, u16[4,640]{1,0} %get-tuple-element.171, pred[4,640]{1,0} %get-tuple-element.172, f32[] %get-tuple-element.173)
}

%region_0.201 (Arg_0.202: f32[], Arg_1.203: f32[]) -> f32[] {
  %Arg_0.202 = f32[] parameter(0)
  %Arg_1.203 = f32[] parameter(1)
  ROOT %add.204 = f32[] add(f32[] %Arg_0.202, f32[] %Arg_1.203), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(2,)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
}

%region_1.224 (Arg_0.225: f32[], Arg_1.226: f32[]) -> f32[] {
  %Arg_0.225 = f32[] parameter(0)
  %Arg_1.226 = f32[] parameter(1)
  ROOT %maximum.227 = f32[] maximum(f32[] %Arg_0.225, f32[] %Arg_1.226), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_max[axes=(2,)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=234}
}

%region_2.255 (Arg_0.256: pred[], Arg_1.257: pred[]) -> pred[] {
  %Arg_0.256 = pred[] parameter(0)
  %Arg_1.257 = pred[] parameter(1)
  ROOT %and.258 = pred[] and(pred[] %Arg_0.256, pred[] %Arg_1.257), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_and[axes=(3,)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
}

%region_3.264 (Arg_0.265: f32[], Arg_1.266: f32[]) -> f32[] {
  %Arg_0.265 = f32[] parameter(0)
  %Arg_1.266 = f32[] parameter(1)
  ROOT %add.267 = f32[] add(f32[] %Arg_0.265, f32[] %Arg_1.266), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(2,)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=237}
}

%region_4.273 (Arg_0.274: f32[], Arg_1.275: f32[]) -> f32[] {
  %Arg_0.274 = f32[] parameter(0)
  %Arg_1.275 = f32[] parameter(1)
  ROOT %add.276 = f32[] add(f32[] %Arg_0.274, f32[] %Arg_1.275), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/Trainer/loss/loss.py" source_line=21}
}

%region_5.279 (Arg_0.280: f32[], Arg_1.281: f32[]) -> f32[] {
  %Arg_0.280 = f32[] parameter(0)
  %Arg_1.281 = f32[] parameter(1)
  ROOT %add.282 = f32[] add(f32[] %Arg_0.280, f32[] %Arg_1.281), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/Trainer/loss/loss.py" source_line=21}
}

%xla_fallback_pipeline_marker_0.286 (Arg_0.287: f32[], Arg_1.288: f32[], Arg_2.289: f32[], Arg_3.290: s32[1], Arg_4.291: s32[4,640,1,3], Arg_5.292: f32[4,640], Arg_6.293: f32[4,640,32000], Arg_7.294: f32[4,640,4096], Arg_8.295: f32[4096,32000], Arg_9.296: f32[4,640,4096], Arg_10.297: f32[1,1,4096], Arg_11.298: f32[4,640,4096], Arg_12.299: f32[4,640,1], Arg_13.300: f32[4,640,4096], Arg_14.301: f32[4,640,1], Arg_15.302: f32[4,640,11008], Arg_16.303: f32[11008,4096], Arg_17.304: f32[4,640,11008], Arg_18.305: f32[4096,11008], Arg_19.306: f32[4,640,11008], Arg_20.307: f32[4,640,11008], Arg_21.308: f32[4,640,11008]) -> (f32[], f32[], f32[], s32[1], s32[4,640,1,3], /*index=5*/f32[4,640], f32[4,640,32000], f32[4,640,4096], f32[4096,32000], f32[4,640,4096], /*index=10*/f32[1,1,4096], f32[4,640,4096], f32[4,640,1], f32[4,640,4096], f32[4,640,1], /*index=15*/f32[4,640,11008], f32[11008,4096], f32[4,640,11008], f32[4096,11008], f32[4,640,11008], /*index=20*/f32[4,640,11008], f32[4,640,11008]) {
  %Arg_0.287 = f32[] parameter(0)
  %Arg_1.288 = f32[] parameter(1)
  %Arg_2.289 = f32[] parameter(2)
  %Arg_3.290 = s32[1]{0} parameter(3)
  %Arg_4.291 = s32[4,640,1,3]{3,2,1,0} parameter(4)
  %Arg_5.292 = f32[4,640]{1,0} parameter(5)
  %Arg_6.293 = f32[4,640,32000]{2,1,0} parameter(6)
  %Arg_7.294 = f32[4,640,4096]{2,1,0} parameter(7)
  %Arg_8.295 = f32[4096,32000]{1,0} parameter(8)
  %Arg_9.296 = f32[4,640,4096]{2,1,0} parameter(9)
  %Arg_10.297 = f32[1,1,4096]{2,1,0} parameter(10)
  %Arg_11.298 = f32[4,640,4096]{2,1,0} parameter(11)
  %Arg_12.299 = f32[4,640,1]{2,1,0} parameter(12)
  %Arg_13.300 = f32[4,640,4096]{2,1,0} parameter(13)
  %Arg_14.301 = f32[4,640,1]{2,1,0} parameter(14)
  %Arg_15.302 = f32[4,640,11008]{2,1,0} parameter(15)
  %Arg_16.303 = f32[11008,4096]{1,0} parameter(16)
  %Arg_17.304 = f32[4,640,11008]{2,1,0} parameter(17)
  %Arg_18.305 = f32[4096,11008]{1,0} parameter(18)
  %Arg_19.306 = f32[4,640,11008]{2,1,0} parameter(19)
  %Arg_20.307 = f32[4,640,11008]{2,1,0} parameter(20)
  %Arg_21.308 = f32[4,640,11008]{2,1,0} parameter(21)
  %tuple.309 = (f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) tuple(f32[] %Arg_0.287, f32[] %Arg_1.288, f32[] %Arg_2.289, s32[1]{0} %Arg_3.290, s32[4,640,1,3]{3,2,1,0} %Arg_4.291, /*index=5*/f32[4,640]{1,0} %Arg_5.292, f32[4,640,32000]{2,1,0} %Arg_6.293, f32[4,640,4096]{2,1,0} %Arg_7.294, f32[4096,32000]{1,0} %Arg_8.295, f32[4,640,4096]{2,1,0} %Arg_9.296, /*index=10*/f32[1,1,4096]{2,1,0} %Arg_10.297, f32[4,640,4096]{2,1,0} %Arg_11.298, f32[4,640,1]{2,1,0} %Arg_12.299, f32[4,640,4096]{2,1,0} %Arg_13.300, f32[4,640,1]{2,1,0} %Arg_14.301, /*index=15*/f32[4,640,11008]{2,1,0} %Arg_15.302, f32[11008,4096]{1,0} %Arg_16.303, f32[4,640,11008]{2,1,0} %Arg_17.304, f32[4096,11008]{1,0} %Arg_18.305, f32[4,640,11008]{2,1,0} %Arg_19.306, /*index=20*/f32[4,640,11008]{2,1,0} %Arg_20.307, f32[4,640,11008]{2,1,0} %Arg_21.308), metadata={op_name="tuple.23"}
  ROOT %custom-call.310 = (f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) custom-call((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %tuple.309), custom_call_target="pipeline_marker", custom_call_has_side_effect=true, metadata={op_name="layer_1$end"}, backend_config="\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000(\000\000\000\000\000\000\000\000\210\023\000\000\000\000\000\000\200\002\000\000\000\000\000\000@\037\000\000\000\000\000\000\200\002\000\000\000\000\000@\000\000\000\000\000\000\000\000\200\002\000\000\000\000\000(\000\000\000\000\000\000\000\000\200\002\000\000\000\000\000(\000\000\000\000\000\000\000\000\270\006\000\000\000\000\000\000\300\n\000\000\000\000\000\000\270\006\000\000\000\000\000\000\300\n\000\000\000\000\000\000\270\006\000\000\000\000\000\000\270\006\000\000\000\000\000\000\270\006\000\000\000\000"
}

%pipeline_marker_0.311 (Arg_0.312: f32[], Arg_1.313: f32[], Arg_2.314: f32[], Arg_3.315: s32[1], Arg_4.316: s32[4,640,1,3], Arg_5.317: f32[4,640], Arg_6.318: f32[4,640,32000], Arg_7.319: f32[4,640,4096], Arg_8.320: f32[4096,32000], Arg_9.321: f32[4,640,4096], Arg_10.322: f32[1,1,4096], Arg_11.323: f32[4,640,4096], Arg_12.324: f32[4,640,1], Arg_13.325: f32[4,640,4096], Arg_14.326: f32[4,640,1], Arg_15.327: f32[4,640,11008], Arg_16.328: f32[11008,4096], Arg_17.329: f32[4,640,11008], Arg_18.330: f32[4096,11008], Arg_19.331: f32[4,640,11008], Arg_20.332: f32[4,640,11008], Arg_21.333: f32[4,640,11008]) -> (f32[], f32[], f32[], s32[1], s32[4,640,1,3], /*index=5*/f32[4,640], f32[4,640,32000], f32[4,640,4096], f32[4096,32000], f32[4,640,4096], /*index=10*/f32[1,1,4096], f32[4,640,4096], f32[4,640,1], f32[4,640,4096], f32[4,640,1], /*index=15*/f32[4,640,11008], f32[11008,4096], f32[4,640,11008], f32[4096,11008], f32[4,640,11008], /*index=20*/f32[4,640,11008], f32[4,640,11008]) {
  %Arg_0.312 = f32[] parameter(0)
  %Arg_1.313 = f32[] parameter(1)
  %Arg_2.314 = f32[] parameter(2)
  %Arg_3.315 = s32[1]{0} parameter(3)
  %Arg_4.316 = s32[4,640,1,3]{3,2,1,0} parameter(4)
  %Arg_5.317 = f32[4,640]{1,0} parameter(5)
  %Arg_6.318 = f32[4,640,32000]{2,1,0} parameter(6)
  %Arg_7.319 = f32[4,640,4096]{2,1,0} parameter(7)
  %Arg_8.320 = f32[4096,32000]{1,0} parameter(8)
  %Arg_9.321 = f32[4,640,4096]{2,1,0} parameter(9)
  %Arg_10.322 = f32[1,1,4096]{2,1,0} parameter(10)
  %Arg_11.323 = f32[4,640,4096]{2,1,0} parameter(11)
  %Arg_12.324 = f32[4,640,1]{2,1,0} parameter(12)
  %Arg_13.325 = f32[4,640,4096]{2,1,0} parameter(13)
  %Arg_14.326 = f32[4,640,1]{2,1,0} parameter(14)
  %Arg_15.327 = f32[4,640,11008]{2,1,0} parameter(15)
  %Arg_16.328 = f32[11008,4096]{1,0} parameter(16)
  %Arg_17.329 = f32[4,640,11008]{2,1,0} parameter(17)
  %Arg_18.330 = f32[4096,11008]{1,0} parameter(18)
  %Arg_19.331 = f32[4,640,11008]{2,1,0} parameter(19)
  %Arg_20.332 = f32[4,640,11008]{2,1,0} parameter(20)
  %Arg_21.333 = f32[4,640,11008]{2,1,0} parameter(21)
  %call.334 = (f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) call(f32[] %Arg_0.312, f32[] %Arg_1.313, f32[] %Arg_2.314, s32[1]{0} %Arg_3.315, s32[4,640,1,3]{3,2,1,0} %Arg_4.316, /*index=5*/f32[4,640]{1,0} %Arg_5.317, f32[4,640,32000]{2,1,0} %Arg_6.318, f32[4,640,4096]{2,1,0} %Arg_7.319, f32[4096,32000]{1,0} %Arg_8.320, f32[4,640,4096]{2,1,0} %Arg_9.321, /*index=10*/f32[1,1,4096]{2,1,0} %Arg_10.322, f32[4,640,4096]{2,1,0} %Arg_11.323, f32[4,640,1]{2,1,0} %Arg_12.324, f32[4,640,4096]{2,1,0} %Arg_13.325, f32[4,640,1]{2,1,0} %Arg_14.326, /*index=15*/f32[4,640,11008]{2,1,0} %Arg_15.327, f32[11008,4096]{1,0} %Arg_16.328, f32[4,640,11008]{2,1,0} %Arg_17.329, f32[4096,11008]{1,0} %Arg_18.330, f32[4,640,11008]{2,1,0} %Arg_19.331, /*index=20*/f32[4,640,11008]{2,1,0} %Arg_20.332, f32[4,640,11008]{2,1,0} %Arg_21.333), to_apply=%xla_fallback_pipeline_marker_0.286
  %get-tuple-element.335 = f32[] get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=0, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.336 = f32[] get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=1, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.337 = f32[] get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=2, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.338 = s32[1]{0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=3, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.339 = s32[4,640,1,3]{3,2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=4, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.340 = f32[4,640]{1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=5, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.341 = f32[4,640,32000]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=6, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.342 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=7, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.343 = f32[4096,32000]{1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=8, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.344 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=9, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.345 = f32[1,1,4096]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=10, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.346 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=11, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.347 = f32[4,640,1]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=12, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.348 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=13, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.349 = f32[4,640,1]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=14, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.350 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=15, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.351 = f32[11008,4096]{1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=16, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.352 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=17, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.353 = f32[4096,11008]{1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=18, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.354 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=19, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.355 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=20, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  %get-tuple-element.356 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.334), index=21, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1 mark_type=end]"}
  ROOT %tuple.357 = (f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) tuple(f32[] %get-tuple-element.335, f32[] %get-tuple-element.336, f32[] %get-tuple-element.337, s32[1]{0} %get-tuple-element.338, s32[4,640,1,3]{3,2,1,0} %get-tuple-element.339, /*index=5*/f32[4,640]{1,0} %get-tuple-element.340, f32[4,640,32000]{2,1,0} %get-tuple-element.341, f32[4,640,4096]{2,1,0} %get-tuple-element.342, f32[4096,32000]{1,0} %get-tuple-element.343, f32[4,640,4096]{2,1,0} %get-tuple-element.344, /*index=10*/f32[1,1,4096]{2,1,0} %get-tuple-element.345, f32[4,640,4096]{2,1,0} %get-tuple-element.346, f32[4,640,1]{2,1,0} %get-tuple-element.347, f32[4,640,4096]{2,1,0} %get-tuple-element.348, f32[4,640,1]{2,1,0} %get-tuple-element.349, /*index=15*/f32[4,640,11008]{2,1,0} %get-tuple-element.350, f32[11008,4096]{1,0} %get-tuple-element.351, f32[4,640,11008]{2,1,0} %get-tuple-element.352, f32[4096,11008]{1,0} %get-tuple-element.353, f32[4,640,11008]{2,1,0} %get-tuple-element.354, /*index=20*/f32[4,640,11008]{2,1,0} %get-tuple-element.355, f32[4,640,11008]{2,1,0} %get-tuple-element.356)
}

%xla_fallback_pipeline_marker_1.381 (Arg_0.382: f32[], Arg_1.383: f32[], Arg_2.384: pred[4,640], Arg_3.385: s32[1], Arg_4.386: s32[4,640,1,3], Arg_5.387: f32[4,640], Arg_6.388: f32[4,640,32000], Arg_7.389: f32[4,640,4096], Arg_8.390: f32[4096,32000], Arg_9.391: f32[4,640,4096], Arg_10.392: f32[1,1,4096], Arg_11.393: f32[4,640,4096], Arg_12.394: f32[4,640,1], Arg_13.395: f32[4,640,4096], Arg_14.396: f32[4,640,1], Arg_15.397: f32[4,640,11008], Arg_16.398: f32[11008,4096], Arg_17.399: f32[4,640,11008], Arg_18.400: f32[4096,11008], Arg_19.401: f32[4,640,11008], Arg_20.402: f32[4,640,11008], Arg_21.403: f32[4,640,11008], Arg_22.404: f32[4,640,4096], Arg_23.405: f32[4,640,11008]) -> (f32[], f32[], pred[4,640], s32[1], s32[4,640,1,3], /*index=5*/f32[4,640], f32[4,640,32000], f32[4,640,4096], f32[4096,32000], f32[4,640,4096], /*index=10*/f32[1,1,4096], f32[4,640,4096], f32[4,640,1], f32[4,640,4096], f32[4,640,1], /*index=15*/f32[4,640,11008], f32[11008,4096], f32[4,640,11008], f32[4096,11008], f32[4,640,11008], /*index=20*/f32[4,640,11008], f32[4,640,11008], f32[4,640,4096], f32[4,640,11008]) {
  %Arg_0.382 = f32[] parameter(0)
  %Arg_1.383 = f32[] parameter(1)
  %Arg_2.384 = pred[4,640]{1,0} parameter(2)
  %Arg_3.385 = s32[1]{0} parameter(3)
  %Arg_4.386 = s32[4,640,1,3]{3,2,1,0} parameter(4)
  %Arg_5.387 = f32[4,640]{1,0} parameter(5)
  %Arg_6.388 = f32[4,640,32000]{2,1,0} parameter(6)
  %Arg_7.389 = f32[4,640,4096]{2,1,0} parameter(7)
  %Arg_8.390 = f32[4096,32000]{1,0} parameter(8)
  %Arg_9.391 = f32[4,640,4096]{2,1,0} parameter(9)
  %Arg_10.392 = f32[1,1,4096]{2,1,0} parameter(10)
  %Arg_11.393 = f32[4,640,4096]{2,1,0} parameter(11)
  %Arg_12.394 = f32[4,640,1]{2,1,0} parameter(12)
  %Arg_13.395 = f32[4,640,4096]{2,1,0} parameter(13)
  %Arg_14.396 = f32[4,640,1]{2,1,0} parameter(14)
  %Arg_15.397 = f32[4,640,11008]{2,1,0} parameter(15)
  %Arg_16.398 = f32[11008,4096]{1,0} parameter(16)
  %Arg_17.399 = f32[4,640,11008]{2,1,0} parameter(17)
  %Arg_18.400 = f32[4096,11008]{1,0} parameter(18)
  %Arg_19.401 = f32[4,640,11008]{2,1,0} parameter(19)
  %Arg_20.402 = f32[4,640,11008]{2,1,0} parameter(20)
  %Arg_21.403 = f32[4,640,11008]{2,1,0} parameter(21)
  %Arg_22.404 = f32[4,640,4096]{2,1,0} parameter(22)
  %Arg_23.405 = f32[4,640,11008]{2,1,0} parameter(23)
  %tuple.406 = (f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) tuple(f32[] %Arg_0.382, f32[] %Arg_1.383, pred[4,640]{1,0} %Arg_2.384, s32[1]{0} %Arg_3.385, s32[4,640,1,3]{3,2,1,0} %Arg_4.386, /*index=5*/f32[4,640]{1,0} %Arg_5.387, f32[4,640,32000]{2,1,0} %Arg_6.388, f32[4,640,4096]{2,1,0} %Arg_7.389, f32[4096,32000]{1,0} %Arg_8.390, f32[4,640,4096]{2,1,0} %Arg_9.391, /*index=10*/f32[1,1,4096]{2,1,0} %Arg_10.392, f32[4,640,4096]{2,1,0} %Arg_11.393, f32[4,640,1]{2,1,0} %Arg_12.394, f32[4,640,4096]{2,1,0} %Arg_13.395, f32[4,640,1]{2,1,0} %Arg_14.396, /*index=15*/f32[4,640,11008]{2,1,0} %Arg_15.397, f32[11008,4096]{1,0} %Arg_16.398, f32[4,640,11008]{2,1,0} %Arg_17.399, f32[4096,11008]{1,0} %Arg_18.400, f32[4,640,11008]{2,1,0} %Arg_19.401, /*index=20*/f32[4,640,11008]{2,1,0} %Arg_20.402, f32[4,640,11008]{2,1,0} %Arg_21.403, f32[4,640,4096]{2,1,0} %Arg_22.404, f32[4,640,11008]{2,1,0} %Arg_23.405), metadata={op_name="tuple.25"}
  ROOT %custom-call.407 = (f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) custom-call((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %tuple.406), custom_call_target="pipeline_marker", custom_call_has_side_effect=true, metadata={op_name="layer_1_backward$start"}, backend_config="\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\n\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000x\000\000\000\000\000\000\000(\000\000\000\000\000\000\000\000\210\023\000\000\000\000\000\000\200\002\000\000\000\000\000\000@\037\000\000\000\000\000\000\200\002\000\000\000\000\000@\000\000\000\000\000\000\000\000\200\002\000\000\000\000\000(\000\000\000\000\000\000\000\000\200\002\000\000\000\000\000(\000\000\000\000\000\000\000\000\270\006\000\000\000\000\000\000\300\n\000\000\000\000\000\000\270\006\000\000\000\000\000\000\300\n\000\000\000\000\000\000\270\006\000\000\000\000\000\000\270\006\000\000\000\000\000\000\270\006\000\000\000\000\000\000\200\002\000\000\000\000\000\000\270\006\000\000\000\000"
}

%pipeline_marker_1.408 (Arg_0.409: f32[], Arg_1.410: f32[], Arg_2.411: pred[4,640], Arg_3.412: s32[1], Arg_4.413: s32[4,640,1,3], Arg_5.414: f32[4,640], Arg_6.415: f32[4,640,32000], Arg_7.416: f32[4,640,4096], Arg_8.417: f32[4096,32000], Arg_9.418: f32[4,640,4096], Arg_10.419: f32[1,1,4096], Arg_11.420: f32[4,640,4096], Arg_12.421: f32[4,640,1], Arg_13.422: f32[4,640,4096], Arg_14.423: f32[4,640,1], Arg_15.424: f32[4,640,11008], Arg_16.425: f32[11008,4096], Arg_17.426: f32[4,640,11008], Arg_18.427: f32[4096,11008], Arg_19.428: f32[4,640,11008], Arg_20.429: f32[4,640,11008], Arg_21.430: f32[4,640,11008], Arg_22.431: f32[4,640,4096], Arg_23.432: f32[4,640,11008]) -> (f32[], f32[], pred[4,640], s32[1], s32[4,640,1,3], /*index=5*/f32[4,640], f32[4,640,32000], f32[4,640,4096], f32[4096,32000], f32[4,640,4096], /*index=10*/f32[1,1,4096], f32[4,640,4096], f32[4,640,1], f32[4,640,4096], f32[4,640,1], /*index=15*/f32[4,640,11008], f32[11008,4096], f32[4,640,11008], f32[4096,11008], f32[4,640,11008], /*index=20*/f32[4,640,11008], f32[4,640,11008], f32[4,640,4096], f32[4,640,11008]) {
  %Arg_0.409 = f32[] parameter(0)
  %Arg_1.410 = f32[] parameter(1)
  %Arg_2.411 = pred[4,640]{1,0} parameter(2)
  %Arg_3.412 = s32[1]{0} parameter(3)
  %Arg_4.413 = s32[4,640,1,3]{3,2,1,0} parameter(4)
  %Arg_5.414 = f32[4,640]{1,0} parameter(5)
  %Arg_6.415 = f32[4,640,32000]{2,1,0} parameter(6)
  %Arg_7.416 = f32[4,640,4096]{2,1,0} parameter(7)
  %Arg_8.417 = f32[4096,32000]{1,0} parameter(8)
  %Arg_9.418 = f32[4,640,4096]{2,1,0} parameter(9)
  %Arg_10.419 = f32[1,1,4096]{2,1,0} parameter(10)
  %Arg_11.420 = f32[4,640,4096]{2,1,0} parameter(11)
  %Arg_12.421 = f32[4,640,1]{2,1,0} parameter(12)
  %Arg_13.422 = f32[4,640,4096]{2,1,0} parameter(13)
  %Arg_14.423 = f32[4,640,1]{2,1,0} parameter(14)
  %Arg_15.424 = f32[4,640,11008]{2,1,0} parameter(15)
  %Arg_16.425 = f32[11008,4096]{1,0} parameter(16)
  %Arg_17.426 = f32[4,640,11008]{2,1,0} parameter(17)
  %Arg_18.427 = f32[4096,11008]{1,0} parameter(18)
  %Arg_19.428 = f32[4,640,11008]{2,1,0} parameter(19)
  %Arg_20.429 = f32[4,640,11008]{2,1,0} parameter(20)
  %Arg_21.430 = f32[4,640,11008]{2,1,0} parameter(21)
  %Arg_22.431 = f32[4,640,4096]{2,1,0} parameter(22)
  %Arg_23.432 = f32[4,640,11008]{2,1,0} parameter(23)
  %call.433 = (f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) call(f32[] %Arg_0.409, f32[] %Arg_1.410, pred[4,640]{1,0} %Arg_2.411, s32[1]{0} %Arg_3.412, s32[4,640,1,3]{3,2,1,0} %Arg_4.413, /*index=5*/f32[4,640]{1,0} %Arg_5.414, f32[4,640,32000]{2,1,0} %Arg_6.415, f32[4,640,4096]{2,1,0} %Arg_7.416, f32[4096,32000]{1,0} %Arg_8.417, f32[4,640,4096]{2,1,0} %Arg_9.418, /*index=10*/f32[1,1,4096]{2,1,0} %Arg_10.419, f32[4,640,4096]{2,1,0} %Arg_11.420, f32[4,640,1]{2,1,0} %Arg_12.421, f32[4,640,4096]{2,1,0} %Arg_13.422, f32[4,640,1]{2,1,0} %Arg_14.423, /*index=15*/f32[4,640,11008]{2,1,0} %Arg_15.424, f32[11008,4096]{1,0} %Arg_16.425, f32[4,640,11008]{2,1,0} %Arg_17.426, f32[4096,11008]{1,0} %Arg_18.427, f32[4,640,11008]{2,1,0} %Arg_19.428, /*index=20*/f32[4,640,11008]{2,1,0} %Arg_20.429, f32[4,640,11008]{2,1,0} %Arg_21.430, f32[4,640,4096]{2,1,0} %Arg_22.431, f32[4,640,11008]{2,1,0} %Arg_23.432), to_apply=%xla_fallback_pipeline_marker_1.381
  %get-tuple-element.434 = f32[] get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=0, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.435 = f32[] get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=1, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.436 = pred[4,640]{1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=2, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.437 = s32[1]{0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=3, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.438 = s32[4,640,1,3]{3,2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=4, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.439 = f32[4,640]{1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=5, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.440 = f32[4,640,32000]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=6, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.441 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=7, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.442 = f32[4096,32000]{1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=8, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.443 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=9, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.444 = f32[1,1,4096]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=10, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.445 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=11, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.446 = f32[4,640,1]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=12, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.447 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=13, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.448 = f32[4,640,1]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=14, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.449 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=15, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.450 = f32[11008,4096]{1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=16, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.451 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=17, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.452 = f32[4096,11008]{1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=18, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.453 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=19, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.454 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=20, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.455 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=21, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.456 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=22, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  %get-tuple-element.457 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.433), index=23, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=start]"}
  ROOT %tuple.458 = (f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) tuple(f32[] %get-tuple-element.434, f32[] %get-tuple-element.435, pred[4,640]{1,0} %get-tuple-element.436, s32[1]{0} %get-tuple-element.437, s32[4,640,1,3]{3,2,1,0} %get-tuple-element.438, /*index=5*/f32[4,640]{1,0} %get-tuple-element.439, f32[4,640,32000]{2,1,0} %get-tuple-element.440, f32[4,640,4096]{2,1,0} %get-tuple-element.441, f32[4096,32000]{1,0} %get-tuple-element.442, f32[4,640,4096]{2,1,0} %get-tuple-element.443, /*index=10*/f32[1,1,4096]{2,1,0} %get-tuple-element.444, f32[4,640,4096]{2,1,0} %get-tuple-element.445, f32[4,640,1]{2,1,0} %get-tuple-element.446, f32[4,640,4096]{2,1,0} %get-tuple-element.447, f32[4,640,1]{2,1,0} %get-tuple-element.448, /*index=15*/f32[4,640,11008]{2,1,0} %get-tuple-element.449, f32[11008,4096]{1,0} %get-tuple-element.450, f32[4,640,11008]{2,1,0} %get-tuple-element.451, f32[4096,11008]{1,0} %get-tuple-element.452, f32[4,640,11008]{2,1,0} %get-tuple-element.453, /*index=20*/f32[4,640,11008]{2,1,0} %get-tuple-element.454, f32[4,640,11008]{2,1,0} %get-tuple-element.455, f32[4,640,4096]{2,1,0} %get-tuple-element.456, f32[4,640,11008]{2,1,0} %get-tuple-element.457)
}

%region_6.488 (Arg_0.489: f32[], Arg_1.490: f32[]) -> f32[] {
  %Arg_0.489 = f32[] parameter(0)
  %Arg_1.490 = f32[] parameter(1)
  ROOT %add.491 = f32[] add(f32[] %Arg_0.489, f32[] %Arg_1.490), metadata={op_name="/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
}

%region_7.493 (Arg_0.494: f32[], Arg_1.495: f32[]) -> f32[] {
  %Arg_0.494 = f32[] parameter(0)
  %Arg_1.495 = f32[] parameter(1)
  ROOT %add.496 = f32[] add(f32[] %Arg_0.494, f32[] %Arg_1.495), metadata={op_name="/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
}

%region_8.507 (Arg_0.508: f32[], Arg_1.509: f32[]) -> f32[] {
  %Arg_0.508 = f32[] parameter(0)
  %Arg_1.509 = f32[] parameter(1)
  ROOT %add.510 = f32[] add(f32[] %Arg_0.508, f32[] %Arg_1.509), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
}

%region_9.513 (Arg_0.514: f32[], Arg_1.515: f32[]) -> f32[] {
  %Arg_0.514 = f32[] parameter(0)
  %Arg_1.515 = f32[] parameter(1)
  ROOT %add.516 = f32[] add(f32[] %Arg_0.514, f32[] %Arg_1.515), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
}

%region_10.524 (Arg_0.525: f32[], Arg_1.526: f32[]) -> f32[] {
  %Arg_0.525 = f32[] parameter(0)
  %Arg_1.526 = f32[] parameter(1)
  ROOT %add.527 = f32[] add(f32[] %Arg_0.525, f32[] %Arg_1.526), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(2,)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
}

%region_11.532 (Arg_0.533: f32[], Arg_1.534: f32[]) -> f32[] {
  %Arg_0.533 = f32[] parameter(0)
  %Arg_1.534 = f32[] parameter(1)
  ROOT %add.535 = f32[] add(f32[] %Arg_0.533, f32[] %Arg_1.534), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(2,)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
}

%xla_fallback_pipeline_marker_2.558 (Arg_0.559: f32[4,640,11008], Arg_1.560: f16[4096,11008], Arg_2.561: f32[4,640,4096], Arg_3.562: f16[11008,4096], Arg_4.563: f32[4,640,4096], Arg_5.564: f16[4096], Arg_6.565: f16[4096,32000]) -> (f32[4,640,11008], f16[4096,11008], f32[4,640,4096], f16[11008,4096], f32[4,640,4096], /*index=5*/f16[4096], f16[4096,32000]) {
  %Arg_0.559 = f32[4,640,11008]{2,1,0} parameter(0)
  %Arg_1.560 = f16[4096,11008]{1,0} parameter(1)
  %Arg_2.561 = f32[4,640,4096]{2,1,0} parameter(2)
  %Arg_3.562 = f16[11008,4096]{1,0} parameter(3)
  %Arg_4.563 = f32[4,640,4096]{2,1,0} parameter(4)
  %Arg_5.564 = f16[4096]{0} parameter(5)
  %Arg_6.565 = f16[4096,32000]{1,0} parameter(6)
  %tuple.566 = (f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) tuple(f32[4,640,11008]{2,1,0} %Arg_0.559, f16[4096,11008]{1,0} %Arg_1.560, f32[4,640,4096]{2,1,0} %Arg_2.561, f16[11008,4096]{1,0} %Arg_3.562, f32[4,640,4096]{2,1,0} %Arg_4.563, /*index=5*/f16[4096]{0} %Arg_5.564, f16[4096,32000]{1,0} %Arg_6.565), metadata={op_name="tuple.8"}
  ROOT %custom-call.567 = (f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) custom-call((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %tuple.566), custom_call_target="pipeline_marker", custom_call_has_side_effect=true, metadata={op_name="layer_1_backward$end"}, backend_config="\000\000\270\006\000\000\000\000\000\000`\005\000\000\000\000\000\000\200\002\000\000\000\000\000\000`\005\000\000\000\000\000\000\200\002\000\000\000\000\000 \000\000\000\000\000\000\000\000\240\017\000\000\000\000"
}

%pipeline_marker_2.568 (Arg_0.569: f32[4,640,11008], Arg_1.570: f16[4096,11008], Arg_2.571: f32[4,640,4096], Arg_3.572: f16[11008,4096], Arg_4.573: f32[4,640,4096], Arg_5.574: f16[4096], Arg_6.575: f16[4096,32000]) -> (f32[4,640,11008], f16[4096,11008], f32[4,640,4096], f16[11008,4096], f32[4,640,4096], /*index=5*/f16[4096], f16[4096,32000]) {
  %Arg_0.569 = f32[4,640,11008]{2,1,0} parameter(0)
  %Arg_1.570 = f16[4096,11008]{1,0} parameter(1)
  %Arg_2.571 = f32[4,640,4096]{2,1,0} parameter(2)
  %Arg_3.572 = f16[11008,4096]{1,0} parameter(3)
  %Arg_4.573 = f32[4,640,4096]{2,1,0} parameter(4)
  %Arg_5.574 = f16[4096]{0} parameter(5)
  %Arg_6.575 = f16[4096,32000]{1,0} parameter(6)
  %call.576 = (f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) call(f32[4,640,11008]{2,1,0} %Arg_0.569, f16[4096,11008]{1,0} %Arg_1.570, f32[4,640,4096]{2,1,0} %Arg_2.571, f16[11008,4096]{1,0} %Arg_3.572, f32[4,640,4096]{2,1,0} %Arg_4.573, /*index=5*/f16[4096]{0} %Arg_5.574, f16[4096,32000]{1,0} %Arg_6.575), to_apply=%xla_fallback_pipeline_marker_2.558
  %get-tuple-element.577 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.576), index=0, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=end]"}
  %get-tuple-element.578 = f16[4096,11008]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.576), index=1, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=end]"}
  %get-tuple-element.579 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.576), index=2, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=end]"}
  %get-tuple-element.580 = f16[11008,4096]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.576), index=3, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=end]"}
  %get-tuple-element.581 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.576), index=4, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=end]"}
  %get-tuple-element.582 = f16[4096]{0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.576), index=5, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=end]"}
  %get-tuple-element.583 = f16[4096,32000]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.576), index=6, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=layer_1_backward mark_type=end]"}
  ROOT %tuple.584 = (f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) tuple(f32[4,640,11008]{2,1,0} %get-tuple-element.577, f16[4096,11008]{1,0} %get-tuple-element.578, f32[4,640,4096]{2,1,0} %get-tuple-element.579, f16[11008,4096]{1,0} %get-tuple-element.580, f32[4,640,4096]{2,1,0} %get-tuple-element.581, /*index=5*/f16[4096]{0} %get-tuple-element.582, f16[4096,32000]{1,0} %get-tuple-element.583)
}

%xla_fallback_pipeline_marker_3.593 (Arg_0.594: f32[], Arg_1.595: s32[], Arg_2.596: s32[], Arg_3.597: f32[4096,32000], Arg_4.598: f32[11008,4096], Arg_5.599: f32[4096,11008], Arg_6.600: f32[4096], Arg_7.601: f32[4096,32000], Arg_8.602: f32[11008,4096], Arg_9.603: f32[4096,11008], Arg_10.604: f32[4096], Arg_11.605: s32[], Arg_12.606: f16[4096,32000], Arg_13.607: f16[11008,4096], Arg_14.608: f16[4096,11008], Arg_15.609: f16[4096], Arg_16.610: f32[4096,32000], Arg_17.611: f32[11008,4096], Arg_18.612: f32[4096,11008], Arg_19.613: f32[4096], Arg_20.614: f32[], Arg_21.615: f16[4096,32000], Arg_22.616: f16[11008,4096], Arg_23.617: f16[4096,11008], Arg_24.618: f16[4096]) -> (f32[], s32[], s32[], f32[4096,32000], f32[11008,4096], /*index=5*/f32[4096,11008], f32[4096], f32[4096,32000], f32[11008,4096], f32[4096,11008], /*index=10*/f32[4096], s32[], f16[4096,32000], f16[11008,4096], f16[4096,11008], /*index=15*/f16[4096], f32[4096,32000], f32[11008,4096], f32[4096,11008], f32[4096], /*index=20*/f32[], f16[4096,32000], f16[11008,4096], f16[4096,11008], f16[4096]) {
  %Arg_0.594 = f32[] parameter(0)
  %Arg_1.595 = s32[] parameter(1)
  %Arg_2.596 = s32[] parameter(2)
  %Arg_3.597 = f32[4096,32000]{1,0} parameter(3)
  %Arg_4.598 = f32[11008,4096]{1,0} parameter(4)
  %Arg_5.599 = f32[4096,11008]{1,0} parameter(5)
  %Arg_6.600 = f32[4096]{0} parameter(6)
  %Arg_7.601 = f32[4096,32000]{1,0} parameter(7)
  %Arg_8.602 = f32[11008,4096]{1,0} parameter(8)
  %Arg_9.603 = f32[4096,11008]{1,0} parameter(9)
  %Arg_10.604 = f32[4096]{0} parameter(10)
  %Arg_11.605 = s32[] parameter(11)
  %Arg_12.606 = f16[4096,32000]{1,0} parameter(12)
  %Arg_13.607 = f16[11008,4096]{1,0} parameter(13)
  %Arg_14.608 = f16[4096,11008]{1,0} parameter(14)
  %Arg_15.609 = f16[4096]{0} parameter(15)
  %Arg_16.610 = f32[4096,32000]{1,0} parameter(16)
  %Arg_17.611 = f32[11008,4096]{1,0} parameter(17)
  %Arg_18.612 = f32[4096,11008]{1,0} parameter(18)
  %Arg_19.613 = f32[4096]{0} parameter(19)
  %Arg_20.614 = f32[] parameter(20)
  %Arg_21.615 = f16[4096,32000]{1,0} parameter(21)
  %Arg_22.616 = f16[11008,4096]{1,0} parameter(22)
  %Arg_23.617 = f16[4096,11008]{1,0} parameter(23)
  %Arg_24.618 = f16[4096]{0} parameter(24)
  %tuple.619 = (f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) tuple(f32[] %Arg_0.594, s32[] %Arg_1.595, s32[] %Arg_2.596, f32[4096,32000]{1,0} %Arg_3.597, f32[11008,4096]{1,0} %Arg_4.598, /*index=5*/f32[4096,11008]{1,0} %Arg_5.599, f32[4096]{0} %Arg_6.600, f32[4096,32000]{1,0} %Arg_7.601, f32[11008,4096]{1,0} %Arg_8.602, f32[4096,11008]{1,0} %Arg_9.603, /*index=10*/f32[4096]{0} %Arg_10.604, s32[] %Arg_11.605, f16[4096,32000]{1,0} %Arg_12.606, f16[11008,4096]{1,0} %Arg_13.607, f16[4096,11008]{1,0} %Arg_14.608, /*index=15*/f16[4096]{0} %Arg_15.609, f32[4096,32000]{1,0} %Arg_16.610, f32[11008,4096]{1,0} %Arg_17.611, f32[4096,11008]{1,0} %Arg_18.612, f32[4096]{0} %Arg_19.613, /*index=20*/f32[] %Arg_20.614, f16[4096,32000]{1,0} %Arg_21.615, f16[11008,4096]{1,0} %Arg_22.616, f16[4096,11008]{1,0} %Arg_23.617, f16[4096]{0} %Arg_24.618), metadata={op_name="tuple.26"}
  ROOT %custom-call.620 = (f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) custom-call((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %tuple.619), custom_call_target="pipeline_marker", custom_call_has_side_effect=true, metadata={op_name="1_apply_grad$start"}, backend_config="\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000@\037\000\000\000\000\000\000\300\n\000\000\000\000\000\000\300\n\000\000\000\000\000@\000\000\000\000\000\000\000\000@\037\000\000\000\000\000\000\300\n\000\000\000\000\000\000\300\n\000\000\000\000\000@\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\240\017\000\000\000\000\000\000`\005\000\000\000\000\000\000`\005\000\000\000\000\000 \000\000\000\000\000\000\000\000@\037\000\000\000\000\000\000\300\n\000\000\000\000\000\000\300\n\000\000\000\000\000@\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\240\017\000\000\000\000\000\000`\005\000\000\000\000\000\000`\005\000\000\000\000\000 \000\000\000\000\000\000"
}

%pipeline_marker_3.621 (Arg_0.622: f32[], Arg_1.623: s32[], Arg_2.624: s32[], Arg_3.625: f32[4096,32000], Arg_4.626: f32[11008,4096], Arg_5.627: f32[4096,11008], Arg_6.628: f32[4096], Arg_7.629: f32[4096,32000], Arg_8.630: f32[11008,4096], Arg_9.631: f32[4096,11008], Arg_10.632: f32[4096], Arg_11.633: s32[], Arg_12.634: f16[4096,32000], Arg_13.635: f16[11008,4096], Arg_14.636: f16[4096,11008], Arg_15.637: f16[4096], Arg_16.638: f32[4096,32000], Arg_17.639: f32[11008,4096], Arg_18.640: f32[4096,11008], Arg_19.641: f32[4096], Arg_20.642: f32[], Arg_21.643: f16[4096,32000], Arg_22.644: f16[11008,4096], Arg_23.645: f16[4096,11008], Arg_24.646: f16[4096]) -> (f32[], s32[], s32[], f32[4096,32000], f32[11008,4096], /*index=5*/f32[4096,11008], f32[4096], f32[4096,32000], f32[11008,4096], f32[4096,11008], /*index=10*/f32[4096], s32[], f16[4096,32000], f16[11008,4096], f16[4096,11008], /*index=15*/f16[4096], f32[4096,32000], f32[11008,4096], f32[4096,11008], f32[4096], /*index=20*/f32[], f16[4096,32000], f16[11008,4096], f16[4096,11008], f16[4096]) {
  %Arg_0.622 = f32[] parameter(0)
  %Arg_1.623 = s32[] parameter(1)
  %Arg_2.624 = s32[] parameter(2)
  %Arg_3.625 = f32[4096,32000]{1,0} parameter(3)
  %Arg_4.626 = f32[11008,4096]{1,0} parameter(4)
  %Arg_5.627 = f32[4096,11008]{1,0} parameter(5)
  %Arg_6.628 = f32[4096]{0} parameter(6)
  %Arg_7.629 = f32[4096,32000]{1,0} parameter(7)
  %Arg_8.630 = f32[11008,4096]{1,0} parameter(8)
  %Arg_9.631 = f32[4096,11008]{1,0} parameter(9)
  %Arg_10.632 = f32[4096]{0} parameter(10)
  %Arg_11.633 = s32[] parameter(11)
  %Arg_12.634 = f16[4096,32000]{1,0} parameter(12)
  %Arg_13.635 = f16[11008,4096]{1,0} parameter(13)
  %Arg_14.636 = f16[4096,11008]{1,0} parameter(14)
  %Arg_15.637 = f16[4096]{0} parameter(15)
  %Arg_16.638 = f32[4096,32000]{1,0} parameter(16)
  %Arg_17.639 = f32[11008,4096]{1,0} parameter(17)
  %Arg_18.640 = f32[4096,11008]{1,0} parameter(18)
  %Arg_19.641 = f32[4096]{0} parameter(19)
  %Arg_20.642 = f32[] parameter(20)
  %Arg_21.643 = f16[4096,32000]{1,0} parameter(21)
  %Arg_22.644 = f16[11008,4096]{1,0} parameter(22)
  %Arg_23.645 = f16[4096,11008]{1,0} parameter(23)
  %Arg_24.646 = f16[4096]{0} parameter(24)
  %call.647 = (f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) call(f32[] %Arg_0.622, s32[] %Arg_1.623, s32[] %Arg_2.624, f32[4096,32000]{1,0} %Arg_3.625, f32[11008,4096]{1,0} %Arg_4.626, /*index=5*/f32[4096,11008]{1,0} %Arg_5.627, f32[4096]{0} %Arg_6.628, f32[4096,32000]{1,0} %Arg_7.629, f32[11008,4096]{1,0} %Arg_8.630, f32[4096,11008]{1,0} %Arg_9.631, /*index=10*/f32[4096]{0} %Arg_10.632, s32[] %Arg_11.633, f16[4096,32000]{1,0} %Arg_12.634, f16[11008,4096]{1,0} %Arg_13.635, f16[4096,11008]{1,0} %Arg_14.636, /*index=15*/f16[4096]{0} %Arg_15.637, f32[4096,32000]{1,0} %Arg_16.638, f32[11008,4096]{1,0} %Arg_17.639, f32[4096,11008]{1,0} %Arg_18.640, f32[4096]{0} %Arg_19.641, /*index=20*/f32[] %Arg_20.642, f16[4096,32000]{1,0} %Arg_21.643, f16[11008,4096]{1,0} %Arg_22.644, f16[4096,11008]{1,0} %Arg_23.645, f16[4096]{0} %Arg_24.646), to_apply=%xla_fallback_pipeline_marker_3.593
  %get-tuple-element.648 = f32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=0, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.649 = s32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=1, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.650 = s32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=2, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.651 = f32[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=3, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.652 = f32[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=4, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.653 = f32[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=5, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.654 = f32[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=6, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.655 = f32[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=7, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.656 = f32[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=8, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.657 = f32[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=9, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.658 = f32[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=10, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.659 = s32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=11, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.660 = f16[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=12, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.661 = f16[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=13, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.662 = f16[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=14, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.663 = f16[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=15, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.664 = f32[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=16, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.665 = f32[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=17, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.666 = f32[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=18, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.667 = f32[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=19, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.668 = f32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=20, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.669 = f16[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=21, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.670 = f16[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=22, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.671 = f16[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=23, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  %get-tuple-element.672 = f16[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.647), index=24, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=start]"}
  ROOT %tuple.673 = (f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) tuple(f32[] %get-tuple-element.648, s32[] %get-tuple-element.649, s32[] %get-tuple-element.650, f32[4096,32000]{1,0} %get-tuple-element.651, f32[11008,4096]{1,0} %get-tuple-element.652, /*index=5*/f32[4096,11008]{1,0} %get-tuple-element.653, f32[4096]{0} %get-tuple-element.654, f32[4096,32000]{1,0} %get-tuple-element.655, f32[11008,4096]{1,0} %get-tuple-element.656, f32[4096,11008]{1,0} %get-tuple-element.657, /*index=10*/f32[4096]{0} %get-tuple-element.658, s32[] %get-tuple-element.659, f16[4096,32000]{1,0} %get-tuple-element.660, f16[11008,4096]{1,0} %get-tuple-element.661, f16[4096,11008]{1,0} %get-tuple-element.662, /*index=15*/f16[4096]{0} %get-tuple-element.663, f32[4096,32000]{1,0} %get-tuple-element.664, f32[11008,4096]{1,0} %get-tuple-element.665, f32[4096,11008]{1,0} %get-tuple-element.666, f32[4096]{0} %get-tuple-element.667, /*index=20*/f32[] %get-tuple-element.668, f16[4096,32000]{1,0} %get-tuple-element.669, f16[11008,4096]{1,0} %get-tuple-element.670, f16[4096,11008]{1,0} %get-tuple-element.671, f16[4096]{0} %get-tuple-element.672)
}

%region_12.719 (Arg_0.720: pred[], Arg_1.721: pred[]) -> pred[] {
  %Arg_0.720 = pred[] parameter(0)
  %Arg_1.721 = pred[] parameter(1)
  ROOT %and.722 = pred[] and(pred[] %Arg_0.720, pred[] %Arg_1.721), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_and[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=493}
}

%region_13.725 (Arg_0.726: pred[], Arg_1.727: pred[]) -> pred[] {
  %Arg_0.726 = pred[] parameter(0)
  %Arg_1.727 = pred[] parameter(1)
  ROOT %and.728 = pred[] and(pred[] %Arg_0.726, pred[] %Arg_1.727), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_and[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=493}
}

%region_14.731 (Arg_0.732: pred[], Arg_1.733: pred[]) -> pred[] {
  %Arg_0.732 = pred[] parameter(0)
  %Arg_1.733 = pred[] parameter(1)
  ROOT %and.734 = pred[] and(pred[] %Arg_0.732, pred[] %Arg_1.733), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_and[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=493}
}

%region_15.737 (Arg_0.738: pred[], Arg_1.739: pred[]) -> pred[] {
  %Arg_0.738 = pred[] parameter(0)
  %Arg_1.739 = pred[] parameter(1)
  ROOT %and.740 = pred[] and(pred[] %Arg_0.738, pred[] %Arg_1.739), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_and[axes=(0,)]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=493}
}

%xla_fallback___builtin_CrossMeshAllReduce.745 (Arg_0.746: pred[]) -> pred[] {
  %Arg_0.746 = pred[] parameter(0)
  ROOT %custom-call.747 = pred[] custom-call(pred[] %Arg_0.746), custom_call_target="__builtin$CrossMeshAllReduce", custom_call_has_side_effect=true, sharding={replicated}, metadata={op_name="custom-call.2"}, backend_config="AND;0$1$"
}

%region_16.760 (Arg_0.761: f32[], Arg_1.762: f32[]) -> f32[] {
  %Arg_0.761 = f32[] parameter(0)
  %Arg_1.762 = f32[] parameter(1)
  ROOT %add.763 = f32[] add(f32[] %Arg_0.761, f32[] %Arg_1.762), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/linear_algebra.py" source_line=30}
}

%region_17.766 (Arg_0.767: f32[], Arg_1.768: f32[]) -> f32[] {
  %Arg_0.767 = f32[] parameter(0)
  %Arg_1.768 = f32[] parameter(1)
  ROOT %add.769 = f32[] add(f32[] %Arg_0.767, f32[] %Arg_1.768), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/linear_algebra.py" source_line=30}
}

%region_18.772 (Arg_0.773: f32[], Arg_1.774: f32[]) -> f32[] {
  %Arg_0.773 = f32[] parameter(0)
  %Arg_1.774 = f32[] parameter(1)
  ROOT %add.775 = f32[] add(f32[] %Arg_0.773, f32[] %Arg_1.774), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/linear_algebra.py" source_line=30}
}

%region_19.778 (Arg_0.779: f32[], Arg_1.780: f32[]) -> f32[] {
  %Arg_0.779 = f32[] parameter(0)
  %Arg_1.780 = f32[] parameter(1)
  ROOT %add.781 = f32[] add(f32[] %Arg_0.779, f32[] %Arg_1.780), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0,)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/linear_algebra.py" source_line=30}
}

%xla_fallback___builtin_CrossMeshAllReduce_0.787 (Arg_0.788: f32[]) -> f32[] {
  %Arg_0.788 = f32[] parameter(0)
  ROOT %custom-call.789 = f32[] custom-call(f32[] %Arg_0.788), custom_call_target="__builtin$CrossMeshAllReduce", custom_call_has_side_effect=true, sharding={replicated}, metadata={op_name="custom-call.2"}, backend_config="SUM;0$1$"
}

%xla_fallback_pipeline_marker_4.964 (Arg_0.965: f32[], Arg_1.966: s32[], Arg_2.967: s32[], Arg_3.968: f32[4096,32000], Arg_4.969: f32[11008,4096], Arg_5.970: f32[4096,11008], Arg_6.971: f32[4096], Arg_7.972: f32[4096,32000], Arg_8.973: f32[11008,4096], Arg_9.974: f32[4096,11008], Arg_10.975: f32[4096], Arg_11.976: s32[], Arg_12.977: f16[4096,32000], Arg_13.978: f16[11008,4096], Arg_14.979: f16[4096,11008], Arg_15.980: f16[4096], Arg_16.981: f32[4096,32000], Arg_17.982: f32[11008,4096], Arg_18.983: f32[4096,11008], Arg_19.984: f32[4096], Arg_20.985: f32[]) -> (f32[], s32[], s32[], f32[4096,32000], f32[11008,4096], /*index=5*/f32[4096,11008], f32[4096], f32[4096,32000], f32[11008,4096], f32[4096,11008], /*index=10*/f32[4096], s32[], f16[4096,32000], f16[11008,4096], f16[4096,11008], /*index=15*/f16[4096], f32[4096,32000], f32[11008,4096], f32[4096,11008], f32[4096], /*index=20*/f32[]) {
  %Arg_0.965 = f32[] parameter(0)
  %Arg_1.966 = s32[] parameter(1)
  %Arg_2.967 = s32[] parameter(2)
  %Arg_3.968 = f32[4096,32000]{1,0} parameter(3)
  %Arg_4.969 = f32[11008,4096]{1,0} parameter(4)
  %Arg_5.970 = f32[4096,11008]{1,0} parameter(5)
  %Arg_6.971 = f32[4096]{0} parameter(6)
  %Arg_7.972 = f32[4096,32000]{1,0} parameter(7)
  %Arg_8.973 = f32[11008,4096]{1,0} parameter(8)
  %Arg_9.974 = f32[4096,11008]{1,0} parameter(9)
  %Arg_10.975 = f32[4096]{0} parameter(10)
  %Arg_11.976 = s32[] parameter(11)
  %Arg_12.977 = f16[4096,32000]{1,0} parameter(12)
  %Arg_13.978 = f16[11008,4096]{1,0} parameter(13)
  %Arg_14.979 = f16[4096,11008]{1,0} parameter(14)
  %Arg_15.980 = f16[4096]{0} parameter(15)
  %Arg_16.981 = f32[4096,32000]{1,0} parameter(16)
  %Arg_17.982 = f32[11008,4096]{1,0} parameter(17)
  %Arg_18.983 = f32[4096,11008]{1,0} parameter(18)
  %Arg_19.984 = f32[4096]{0} parameter(19)
  %Arg_20.985 = f32[] parameter(20)
  %tuple.986 = (f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) tuple(f32[] %Arg_0.965, s32[] %Arg_1.966, s32[] %Arg_2.967, f32[4096,32000]{1,0} %Arg_3.968, f32[11008,4096]{1,0} %Arg_4.969, /*index=5*/f32[4096,11008]{1,0} %Arg_5.970, f32[4096]{0} %Arg_6.971, f32[4096,32000]{1,0} %Arg_7.972, f32[11008,4096]{1,0} %Arg_8.973, f32[4096,11008]{1,0} %Arg_9.974, /*index=10*/f32[4096]{0} %Arg_10.975, s32[] %Arg_11.976, f16[4096,32000]{1,0} %Arg_12.977, f16[11008,4096]{1,0} %Arg_13.978, f16[4096,11008]{1,0} %Arg_14.979, /*index=15*/f16[4096]{0} %Arg_15.980, f32[4096,32000]{1,0} %Arg_16.981, f32[11008,4096]{1,0} %Arg_17.982, f32[4096,11008]{1,0} %Arg_18.983, f32[4096]{0} %Arg_19.984, /*index=20*/f32[] %Arg_20.985), metadata={op_name="tuple.22"}
  ROOT %custom-call.987 = (f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) custom-call((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %tuple.986), custom_call_target="pipeline_marker", custom_call_has_side_effect=true, metadata={op_name="1_apply_grad$end"}, backend_config="\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000@\037\000\000\000\000\000\000\300\n\000\000\000\000\000\000\300\n\000\000\000\000\000@\000\000\000\000\000\000\000\000@\037\000\000\000\000\000\000\300\n\000\000\000\000\000\000\300\n\000\000\000\000\000@\000\000\000\000\000\000\004\000\000\000\000\000\000\000\000\000\240\017\000\000\000\000\000\000`\005\000\000\000\000\000\000`\005\000\000\000\000\000 \000\000\000\000\000\000\000\000@\037\000\000\000\000\000\000\300\n\000\000\000\000\000\000\300\n\000\000\000\000\000@\000\000\000\000\000\000\004\000\000\000\000\000\000\000"
}

%pipeline_marker_4.988 (Arg_0.989: f32[], Arg_1.990: s32[], Arg_2.991: s32[], Arg_3.992: f32[4096,32000], Arg_4.993: f32[11008,4096], Arg_5.994: f32[4096,11008], Arg_6.995: f32[4096], Arg_7.996: f32[4096,32000], Arg_8.997: f32[11008,4096], Arg_9.998: f32[4096,11008], Arg_10.999: f32[4096], Arg_11.1000: s32[], Arg_12.1001: f16[4096,32000], Arg_13.1002: f16[11008,4096], Arg_14.1003: f16[4096,11008], Arg_15.1004: f16[4096], Arg_16.1005: f32[4096,32000], Arg_17.1006: f32[11008,4096], Arg_18.1007: f32[4096,11008], Arg_19.1008: f32[4096], Arg_20.1009: f32[]) -> (f32[], s32[], s32[], f32[4096,32000], f32[11008,4096], /*index=5*/f32[4096,11008], f32[4096], f32[4096,32000], f32[11008,4096], f32[4096,11008], /*index=10*/f32[4096], s32[], f16[4096,32000], f16[11008,4096], f16[4096,11008], /*index=15*/f16[4096], f32[4096,32000], f32[11008,4096], f32[4096,11008], f32[4096], /*index=20*/f32[]) {
  %Arg_0.989 = f32[] parameter(0)
  %Arg_1.990 = s32[] parameter(1)
  %Arg_2.991 = s32[] parameter(2)
  %Arg_3.992 = f32[4096,32000]{1,0} parameter(3)
  %Arg_4.993 = f32[11008,4096]{1,0} parameter(4)
  %Arg_5.994 = f32[4096,11008]{1,0} parameter(5)
  %Arg_6.995 = f32[4096]{0} parameter(6)
  %Arg_7.996 = f32[4096,32000]{1,0} parameter(7)
  %Arg_8.997 = f32[11008,4096]{1,0} parameter(8)
  %Arg_9.998 = f32[4096,11008]{1,0} parameter(9)
  %Arg_10.999 = f32[4096]{0} parameter(10)
  %Arg_11.1000 = s32[] parameter(11)
  %Arg_12.1001 = f16[4096,32000]{1,0} parameter(12)
  %Arg_13.1002 = f16[11008,4096]{1,0} parameter(13)
  %Arg_14.1003 = f16[4096,11008]{1,0} parameter(14)
  %Arg_15.1004 = f16[4096]{0} parameter(15)
  %Arg_16.1005 = f32[4096,32000]{1,0} parameter(16)
  %Arg_17.1006 = f32[11008,4096]{1,0} parameter(17)
  %Arg_18.1007 = f32[4096,11008]{1,0} parameter(18)
  %Arg_19.1008 = f32[4096]{0} parameter(19)
  %Arg_20.1009 = f32[] parameter(20)
  %call.1010 = (f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) call(f32[] %Arg_0.989, s32[] %Arg_1.990, s32[] %Arg_2.991, f32[4096,32000]{1,0} %Arg_3.992, f32[11008,4096]{1,0} %Arg_4.993, /*index=5*/f32[4096,11008]{1,0} %Arg_5.994, f32[4096]{0} %Arg_6.995, f32[4096,32000]{1,0} %Arg_7.996, f32[11008,4096]{1,0} %Arg_8.997, f32[4096,11008]{1,0} %Arg_9.998, /*index=10*/f32[4096]{0} %Arg_10.999, s32[] %Arg_11.1000, f16[4096,32000]{1,0} %Arg_12.1001, f16[11008,4096]{1,0} %Arg_13.1002, f16[4096,11008]{1,0} %Arg_14.1003, /*index=15*/f16[4096]{0} %Arg_15.1004, f32[4096,32000]{1,0} %Arg_16.1005, f32[11008,4096]{1,0} %Arg_17.1006, f32[4096,11008]{1,0} %Arg_18.1007, f32[4096]{0} %Arg_19.1008, /*index=20*/f32[] %Arg_20.1009), to_apply=%xla_fallback_pipeline_marker_4.964
  %get-tuple-element.1011 = f32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=0, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1012 = s32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=1, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1013 = s32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=2, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1014 = f32[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=3, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1015 = f32[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=4, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1016 = f32[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=5, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1017 = f32[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=6, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1018 = f32[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=7, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1019 = f32[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=8, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1020 = f32[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=9, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1021 = f32[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=10, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1022 = s32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=11, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1023 = f16[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=12, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1024 = f16[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=13, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1025 = f16[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=14, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1026 = f16[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=15, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1027 = f32[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=16, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1028 = f32[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=17, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1029 = f32[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=18, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1030 = f32[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=19, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  %get-tuple-element.1031 = f32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1010), index=20, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pipeline_marker[name=1_apply_grad mark_type=end]"}
  ROOT %tuple.1032 = (f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) tuple(f32[] %get-tuple-element.1011, s32[] %get-tuple-element.1012, s32[] %get-tuple-element.1013, f32[4096,32000]{1,0} %get-tuple-element.1014, f32[11008,4096]{1,0} %get-tuple-element.1015, /*index=5*/f32[4096,11008]{1,0} %get-tuple-element.1016, f32[4096]{0} %get-tuple-element.1017, f32[4096,32000]{1,0} %get-tuple-element.1018, f32[11008,4096]{1,0} %get-tuple-element.1019, f32[4096,11008]{1,0} %get-tuple-element.1020, /*index=10*/f32[4096]{0} %get-tuple-element.1021, s32[] %get-tuple-element.1022, f16[4096,32000]{1,0} %get-tuple-element.1023, f16[11008,4096]{1,0} %get-tuple-element.1024, f16[4096,11008]{1,0} %get-tuple-element.1025, /*index=15*/f16[4096]{0} %get-tuple-element.1026, f32[4096,32000]{1,0} %get-tuple-element.1027, f32[11008,4096]{1,0} %get-tuple-element.1028, f32[4096,11008]{1,0} %get-tuple-element.1029, f32[4096]{0} %get-tuple-element.1030, /*index=20*/f32[] %get-tuple-element.1031)
}

ENTRY %main.1056 (Arg_0.1: f32[], Arg_1.2: s32[], Arg_2.3: s32[], Arg_3.4: f32[4096,32000], Arg_4.5: f32[11008,4096], Arg_5.6: f32[4096,11008], Arg_6.7: f32[4096], Arg_7.8: f32[4096,32000], Arg_8.9: f32[11008,4096], Arg_9.10: f32[4096,11008], Arg_10.11: f32[4096], Arg_11.12: s32[], Arg_12.13: f16[4096,32000], Arg_13.14: f16[11008,4096], Arg_14.15: f16[4096,11008], Arg_15.16: f16[4096], Arg_16.17: f32[4096,32000], Arg_17.18: f32[11008,4096], Arg_18.19: f32[4096,11008], Arg_19.20: f32[4096], Arg_20.21: f32[4,640,11008], Arg_21.22: f32[4,640,4096], Arg_22.23: f32[4,640,4096], Arg_23.24: u16[4,640], Arg_24.25: pred[4,640]) -> (f32[], s32[], s32[], f32[4096,32000], f32[11008,4096], /*index=5*/f32[4096,11008], f32[4096], f32[4096,32000], f32[11008,4096], f32[4096,11008], /*index=10*/f32[4096], s32[], f16[4096,32000], f16[11008,4096], f16[4096,11008], /*index=15*/f16[4096], f32[4096,32000], f32[11008,4096], f32[4096,11008], f32[4096], /*index=20*/f32[], f32[], f32[], s32[1], s32[4,640,1,3], /*index=25*/f32[4,640], f32[4,640,32000], f32[4,640,4096], f32[4096,32000], f32[4,640,4096], /*index=30*/f32[1,1,4096], f32[4,640,4096], f32[4,640,1], f32[4,640,4096], f32[4,640,1], /*index=35*/f32[4,640,11008], f32[11008,4096], f32[4,640,11008], f32[4096,11008], f32[4,640,11008], /*index=40*/f32[4,640,11008], f32[4,640,11008], f32[4,640,11008], f16[4096,11008], f32[4,640,4096], /*index=45*/f16[11008,4096], f32[4,640,4096], f16[4096], f16[4096,32000], f32[]) {
  %Arg_0.1 = f32[] parameter(0)
  %Arg_1.2 = s32[] parameter(1)
  %Arg_2.3 = s32[] parameter(2)
  %Arg_3.4 = f32[4096,32000]{1,0} parameter(3)
  %Arg_4.5 = f32[11008,4096]{1,0} parameter(4)
  %Arg_5.6 = f32[4096,11008]{1,0} parameter(5)
  %Arg_6.7 = f32[4096]{0} parameter(6)
  %Arg_7.8 = f32[4096,32000]{1,0} parameter(7)
  %Arg_8.9 = f32[11008,4096]{1,0} parameter(8)
  %Arg_9.10 = f32[4096,11008]{1,0} parameter(9)
  %Arg_10.11 = f32[4096]{0} parameter(10)
  %Arg_11.12 = s32[] parameter(11)
  %Arg_12.13 = f16[4096,32000]{1,0} parameter(12)
  %Arg_13.14 = f16[11008,4096]{1,0} parameter(13)
  %Arg_14.15 = f16[4096,11008]{1,0} parameter(14)
  %Arg_15.16 = f16[4096]{0} parameter(15)
  %Arg_16.17 = f32[4096,32000]{1,0} parameter(16)
  %Arg_17.18 = f32[11008,4096]{1,0} parameter(17)
  %Arg_18.19 = f32[4096,11008]{1,0} parameter(18)
  %Arg_19.20 = f32[4096]{0} parameter(19)
  %Arg_20.21 = f32[4,640,11008]{2,1,0} parameter(20)
  %Arg_21.22 = f32[4,640,4096]{2,1,0} parameter(21)
  %Arg_22.23 = f32[4,640,4096]{2,1,0} parameter(22)
  %Arg_23.24 = u16[4,640]{1,0} parameter(23)
  %Arg_24.25 = pred[4,640]{1,0} parameter(24)
  %call.175 = (f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) call(f32[4,640,11008]{2,1,0} %Arg_20.21, f16[4096,11008]{1,0} %Arg_14.15, f32[4,640,4096]{2,1,0} %Arg_21.22, f16[11008,4096]{1,0} %Arg_13.14, f32[4,640,4096]{2,1,0} %Arg_22.23, /*index=5*/f16[4096]{0} %Arg_15.16, f16[4096,32000]{1,0} %Arg_12.13, u16[4,640]{1,0} %Arg_23.24, pred[4,640]{1,0} %Arg_24.25, f32[] %Arg_0.1), to_apply=%pipeline_marker.152
  %get-tuple-element.185 = f32[] get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.175), index=9
  %get-tuple-element.184 = pred[4,640]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.175), index=8
  %get-tuple-element.180 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.175), index=4
  %get-tuple-element.176 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.175), index=0
  %constant.117 = f32[] constant(1)
  %broadcast.118 = f32[4,640,11008]{2,1,0} broadcast(f32[] %constant.117), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %negate.186 = f32[4,640,11008]{2,1,0} negate(f32[4,640,11008]{2,1,0} %get-tuple-element.176), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/neg" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %exponential.187 = f32[4,640,11008]{2,1,0} exponential(f32[4,640,11008]{2,1,0} %negate.186), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/exp" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %add.188 = f32[4,640,11008]{2,1,0} add(f32[4,640,11008]{2,1,0} %exponential.187, f32[4,640,11008]{2,1,0} %broadcast.118), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %divide.189 = f32[4,640,11008]{2,1,0} divide(f32[4,640,11008]{2,1,0} %broadcast.118, f32[4,640,11008]{2,1,0} %add.188), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %multiply.192 = f32[4,640,11008]{2,1,0} multiply(f32[4,640,11008]{2,1,0} %get-tuple-element.176, f32[4,640,11008]{2,1,0} %divide.189), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %get-tuple-element.178 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.175), index=2
  %get-tuple-element.177 = f16[4096,11008]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.175), index=1
  %convert.193 = f32[4096,11008]{1,0} convert(f16[4096,11008]{1,0} %get-tuple-element.177), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %dot.194 = f32[4,640,11008]{2,1,0} dot(f32[4,640,4096]{2,1,0} %get-tuple-element.178, f32[4096,11008]{1,0} %convert.193), lhs_contracting_dims={2}, rhs_contracting_dims={0}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/dot_general[dimension_numbers=(((2,), (0,)), ((), ())) precision=None preferred_element_type=None]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %multiply.195 = f32[4,640,11008]{2,1,0} multiply(f32[4,640,11008]{2,1,0} %multiply.192, f32[4,640,11008]{2,1,0} %dot.194), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %get-tuple-element.179 = f16[11008,4096]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.175), index=3
  %convert.196 = f32[11008,4096]{1,0} convert(f16[11008,4096]{1,0} %get-tuple-element.179), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %dot.197 = f32[4,640,4096]{2,1,0} dot(f32[4,640,11008]{2,1,0} %multiply.195, f32[11008,4096]{1,0} %convert.196), lhs_contracting_dims={2}, rhs_contracting_dims={0}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/dot_general[dimension_numbers=(((2,), (0,)), ((), ())) precision=None preferred_element_type=None]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %add.198 = f32[4,640,4096]{2,1,0} add(f32[4,640,4096]{2,1,0} %get-tuple-element.180, f32[4,640,4096]{2,1,0} %dot.197), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=324}
  %multiply.199 = f32[4,640,4096]{2,1,0} multiply(f32[4,640,4096]{2,1,0} %add.198, f32[4,640,4096]{2,1,0} %add.198), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %constant.134 = f32[] constant(0)
  %reduce.205 = f32[4,640]{1,0} reduce(f32[4,640,4096]{2,1,0} %multiply.199, f32[] %constant.134), dimensions={2}, to_apply=%region_0.201, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(2,)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %reshape.206 = f32[4,640,1]{2,1,0} reshape(f32[4,640]{1,0} %reduce.205), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4, 640, 1) broadcast_dimensions=(0, 1)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %constant.90 = f32[] constant(4096)
  %broadcast.91 = f32[4,640,1]{2,1,0} broadcast(f32[] %constant.90), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %divide.207 = f32[4,640,1]{2,1,0} divide(f32[4,640,1]{2,1,0} %reshape.206, f32[4,640,1]{2,1,0} %broadcast.91), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %constant.113 = f32[] constant(1e-06)
  %broadcast.114 = f32[4,640,1]{2,1,0} broadcast(f32[] %constant.113), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %add.208 = f32[4,640,1]{2,1,0} add(f32[4,640,1]{2,1,0} %divide.207, f32[4,640,1]{2,1,0} %broadcast.114), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %rsqrt.209 = f32[4,640,1]{2,1,0} rsqrt(f32[4,640,1]{2,1,0} %add.208), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/rsqrt" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %broadcast.212 = f32[4,640,1]{2,1,0} broadcast(f32[4,640,1]{2,1,0} %rsqrt.209), dimensions={0,1,2}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %reshape.213 = f32[4,640]{1,0} reshape(f32[4,640,1]{2,1,0} %broadcast.212), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %broadcast.214 = f32[4,640,4096]{2,1,0} broadcast(f32[4,640]{1,0} %reshape.213), dimensions={0,1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %multiply.215 = f32[4,640,4096]{2,1,0} multiply(f32[4,640,4096]{2,1,0} %add.198, f32[4,640,4096]{2,1,0} %broadcast.214), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %get-tuple-element.181 = f16[4096]{0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.175), index=5
  %convert.216 = f32[4096]{0} convert(f16[4096]{0} %get-tuple-element.181), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=30}
  %reshape.217 = f32[1,1,4096]{2,1,0} reshape(f32[4096]{0} %convert.216), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(1, 1, 4096) broadcast_dimensions=(2,)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %broadcast.218 = f32[1,1,4096]{2,1,0} broadcast(f32[1,1,4096]{2,1,0} %reshape.217), dimensions={0,1,2}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %reshape.219 = f32[4096]{0} reshape(f32[1,1,4096]{2,1,0} %broadcast.218), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %broadcast.220 = f32[4,640,4096]{2,1,0} broadcast(f32[4096]{0} %reshape.219), dimensions={2}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %multiply.221 = f32[4,640,4096]{2,1,0} multiply(f32[4,640,4096]{2,1,0} %multiply.215, f32[4,640,4096]{2,1,0} %broadcast.220), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %get-tuple-element.182 = f16[4096,32000]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.175), index=6
  %convert.222 = f32[4096,32000]{1,0} convert(f16[4096,32000]{1,0} %get-tuple-element.182), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %dot.223 = f32[4,640,32000]{2,1,0} dot(f32[4,640,4096]{2,1,0} %multiply.221, f32[4096,32000]{1,0} %convert.222), lhs_contracting_dims={2}, rhs_contracting_dims={0}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/dot_general[dimension_numbers=(((2,), (0,)), ((), ())) precision=None preferred_element_type=None]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %constant.133 = f32[] constant(-inf)
  %reduce.228 = f32[4,640]{1,0} reduce(f32[4,640,32000]{2,1,0} %dot.223, f32[] %constant.133), dimensions={2}, to_apply=%region_1.224, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_max[axes=(2,)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=234}
  %reshape.229 = f32[4,640,1]{2,1,0} reshape(f32[4,640]{1,0} %reduce.228), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4, 640, 1) broadcast_dimensions=(0, 1)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=234}
  %broadcast.230 = f32[4,640,1]{2,1,0} broadcast(f32[4,640,1]{2,1,0} %reshape.229), dimensions={0,1,2}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sub" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=235}
  %reshape.231 = f32[4,640]{1,0} reshape(f32[4,640,1]{2,1,0} %broadcast.230), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sub" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=235}
  %broadcast.232 = f32[4,640,32000]{2,1,0} broadcast(f32[4,640]{1,0} %reshape.231), dimensions={0,1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sub" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=235}
  %subtract.233 = f32[4,640,32000]{2,1,0} subtract(f32[4,640,32000]{2,1,0} %dot.223, f32[4,640,32000]{2,1,0} %broadcast.232), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sub" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=235}
  %exponential.263 = f32[4,640,32000]{2,1,0} exponential(f32[4,640,32000]{2,1,0} %subtract.233), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/exp" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=237}
  %reduce.268 = f32[4,640]{1,0} reduce(f32[4,640,32000]{2,1,0} %exponential.263, f32[] %constant.134), dimensions={2}, to_apply=%region_3.264, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(2,)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=237}
  %log.269 = f32[4,640]{1,0} log(f32[4,640]{1,0} %reduce.268), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/log" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=237}
  %iota.236 = s32[4]{0} iota(), iota_dimension=0, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/iota[dtype=int32 shape=(4, 640, 1, 1) dimension=0]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %broadcast.237 = s32[4,640,1,1]{3,2,1,0} broadcast(s32[4]{0} %iota.236), dimensions={0}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/iota[dtype=int32 shape=(4, 640, 1, 1) dimension=0]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %iota.238 = s32[640]{0} iota(), iota_dimension=0, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/iota[dtype=int32 shape=(4, 640, 1, 1) dimension=1]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %broadcast.239 = s32[4,640,1,1]{3,2,1,0} broadcast(s32[640]{0} %iota.238), dimensions={1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/iota[dtype=int32 shape=(4, 640, 1, 1) dimension=1]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %get-tuple-element.183 = u16[4,640]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}, u16[4,640]{1,0}, pred[4,640]{1,0}, f32[]) %call.175), index=7
  %reshape.234 = u16[4,640,1]{2,1,0} reshape(u16[4,640]{1,0} %get-tuple-element.183), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4, 640, 1) broadcast_dimensions=(0, 1)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %convert.235 = s32[4,640,1]{2,1,0} convert(u16[4,640,1]{2,1,0} %reshape.234), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=int32 weak_type=False]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %constant.109 = s32[] constant(0)
  %broadcast.110 = s32[4,640,1]{2,1,0} broadcast(s32[] %constant.109), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/lt" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %compare.240 = pred[4,640,1]{2,1,0} compare(s32[4,640,1]{2,1,0} %convert.235, s32[4,640,1]{2,1,0} %broadcast.110), direction=LT, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/lt" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %constant.107 = s32[] constant(32000)
  %broadcast.108 = s32[4,640,1]{2,1,0} broadcast(s32[] %constant.107), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %add.241 = s32[4,640,1]{2,1,0} add(s32[4,640,1]{2,1,0} %convert.235, s32[4,640,1]{2,1,0} %broadcast.108), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %select.242 = s32[4,640,1]{2,1,0} select(pred[4,640,1]{2,1,0} %compare.240, s32[4,640,1]{2,1,0} %add.241, s32[4,640,1]{2,1,0} %convert.235), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %reshape.243 = s32[4,640,1,1]{3,2,1,0} reshape(s32[4,640,1]{2,1,0} %select.242), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reshape[new_sizes=(4, 640, 1, 1) dimensions=None]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %concatenate.244 = s32[4,640,1,3]{3,2,1,0} concatenate(s32[4,640,1,1]{3,2,1,0} %broadcast.237, s32[4,640,1,1]{3,2,1,0} %broadcast.239, s32[4,640,1,1]{3,2,1,0} %reshape.243), dimensions={3}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/concatenate[dimension=3]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %constant.101 = s32[] constant(0)
  %broadcast.102 = s32[4,640,1,3]{3,2,1,0} broadcast(s32[] %constant.101), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/ge" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %compare.248 = pred[4,640,1,3]{3,2,1,0} compare(s32[4,640,1,3]{3,2,1,0} %concatenate.244, s32[4,640,1,3]{3,2,1,0} %broadcast.102), direction=GE, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/ge" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %constant.106 = s32[3]{0} constant({4, 640, 32000})
  %constant.103 = s32[3,1]{1,0} constant({ {0}, {1}, {2} })
  %gather.245 = s32[3]{0} gather(s32[3]{0} %constant.106, s32[3,1]{1,0} %constant.103), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/gather[dimension_numbers=GatherDimensionNumbers(offset_dims=(), collapsed_slice_dims=(0,), start_index_map=(0,)) slice_sizes=(1,) unique_indices=False indices_are_sorted=False mode=GatherScatterMode.PROMISE_IN_BOUNDS fill_value=None]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %constant.104 = s32[] constant(1)
  %broadcast.105 = s32[3]{0} broadcast(s32[] %constant.104), dimensions={}
  %gather.246 = s32[3]{0} gather(s32[3]{0} %broadcast.105, s32[3,1]{1,0} %constant.103), offset_dims={}, collapsed_slice_dims={0}, start_index_map={0}, index_vector_dim=1, slice_sizes={1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/gather[dimension_numbers=GatherDimensionNumbers(offset_dims=(), collapsed_slice_dims=(0,), start_index_map=(0,)) slice_sizes=(1,) unique_indices=False indices_are_sorted=False mode=GatherScatterMode.PROMISE_IN_BOUNDS fill_value=None]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %subtract.247 = s32[3]{0} subtract(s32[3]{0} %gather.245, s32[3]{0} %gather.246), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sub" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %reshape.249 = s32[1,1,1,3]{3,2,1,0} reshape(s32[3]{0} %subtract.247), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(1, 1, 1, 3) broadcast_dimensions=(3,)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %broadcast.250 = s32[1,1,1,3]{3,2,1,0} broadcast(s32[1,1,1,3]{3,2,1,0} %reshape.249), dimensions={0,1,2,3}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/le" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %reshape.251 = s32[1,3]{1,0} reshape(s32[1,1,1,3]{3,2,1,0} %broadcast.250), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/le" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %broadcast.252 = s32[4,640,1,3]{3,2,1,0} broadcast(s32[1,3]{1,0} %reshape.251), dimensions={2,3}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/le" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %compare.253 = pred[4,640,1,3]{3,2,1,0} compare(s32[4,640,1,3]{3,2,1,0} %concatenate.244, s32[4,640,1,3]{3,2,1,0} %broadcast.252), direction=LE, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/le" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %and.254 = pred[4,640,1,3]{3,2,1,0} and(pred[4,640,1,3]{3,2,1,0} %compare.248, pred[4,640,1,3]{3,2,1,0} %compare.253), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/and" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %constant.130 = pred[] constant(true)
  %reduce.259 = pred[4,640,1]{2,1,0} reduce(pred[4,640,1,3]{3,2,1,0} %and.254, pred[] %constant.130), dimensions={3}, to_apply=%region_2.255, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_and[axes=(3,)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %gather.260 = f32[4,640,1]{2,1,0} gather(f32[4,640,32000]{2,1,0} %subtract.233, s32[4,640,1,3]{3,2,1,0} %concatenate.244), offset_dims={}, collapsed_slice_dims={0,1,2}, start_index_map={0,1,2}, index_vector_dim=3, slice_sizes={1,1,1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/gather[dimension_numbers=GatherDimensionNumbers(offset_dims=(), collapsed_slice_dims=(0, 1, 2), start_index_map=(0, 1, 2)) slice_sizes=(1, 1, 1) unique_indices=False indices_are_sorted=False mode=GatherScatterMode.PROMISE_IN_BOUNDS fill_value=None]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %constant.99 = f32[] constant(nan)
  %broadcast.100 = f32[4,640,1]{2,1,0} broadcast(f32[] %constant.99), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4, 640, 1) broadcast_dimensions=()]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %select.261 = f32[4,640,1]{2,1,0} select(pred[4,640,1]{2,1,0} %reduce.259, f32[4,640,1]{2,1,0} %gather.260, f32[4,640,1]{2,1,0} %broadcast.100), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %reshape.262 = f32[4,640]{1,0} reshape(f32[4,640,1]{2,1,0} %select.261), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/gather[dimension_numbers=GatherDimensionNumbers(offset_dims=(0, 1), collapsed_slice_dims=(2,), start_index_map=(2,)) slice_sizes=(4, 640, 1) unique_indices=True indices_are_sorted=True mode=GatherScatterMode.PROMISE_IN_BOUNDS fill_value=None]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %subtract.270 = f32[4,640]{1,0} subtract(f32[4,640]{1,0} %log.269, f32[4,640]{1,0} %reshape.262), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sub" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=238}
  %constant.96 = f32[] constant(0)
  %broadcast.97 = f32[4,640]{1,0} broadcast(f32[] %constant.96), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4, 640) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/loss/loss.py" source_line=21}
  %select.278 = f32[4,640]{1,0} select(pred[4,640]{1,0} %get-tuple-element.184, f32[4,640]{1,0} %subtract.270, f32[4,640]{1,0} %broadcast.97), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/loss/loss.py" source_line=21}
  %reduce.283 = f32[] reduce(f32[4,640]{1,0} %select.278, f32[] %constant.134), dimensions={0,1}, to_apply=%region_5.279, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/Trainer/loss/loss.py" source_line=21}
  %convert.271 = s32[4,640]{1,0} convert(pred[4,640]{1,0} %get-tuple-element.184), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=int32 weak_type=False]" source_file="/data/hejing/distri/alpa/Trainer/loss/loss.py" source_line=21}
  %convert.272 = f32[4,640]{1,0} convert(s32[4,640]{1,0} %convert.271), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/data/hejing/distri/alpa/Trainer/loss/loss.py" source_line=21}
  %reduce.277 = f32[] reduce(f32[4,640]{1,0} %convert.272, f32[] %constant.134), dimensions={0,1}, to_apply=%region_4.273, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/Trainer/loss/loss.py" source_line=21}
  %divide.284 = f32[] divide(f32[] %reduce.283, f32[] %reduce.277), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/Trainer/loss/loss.py" source_line=21}
  %multiply.285 = f32[] multiply(f32[] %get-tuple-element.185, f32[] %divide.284), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=478}
  %constant.98 = s32[1]{0} constant({0})
  %divide.210 = f32[4,640,1]{2,1,0} divide(f32[4,640,1]{2,1,0} %rsqrt.209, f32[4,640,1]{2,1,0} %add.208), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %constant.111 = f32[] constant(-0.5)
  %broadcast.112 = f32[4,640,1]{2,1,0} broadcast(f32[] %constant.111), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %multiply.211 = f32[4,640,1]{2,1,0} multiply(f32[4,640,1]{2,1,0} %divide.210, f32[4,640,1]{2,1,0} %broadcast.112), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %constant.115 = f32[] constant(2)
  %broadcast.116 = f32[4,640,4096]{2,1,0} broadcast(f32[] %constant.115), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %multiply.200 = f32[4,640,4096]{2,1,0} multiply(f32[4,640,4096]{2,1,0} %add.198, f32[4,640,4096]{2,1,0} %broadcast.116), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %subtract.190 = f32[4,640,11008]{2,1,0} subtract(f32[4,640,11008]{2,1,0} %broadcast.118, f32[4,640,11008]{2,1,0} %divide.189), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sub" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %multiply.191 = f32[4,640,11008]{2,1,0} multiply(f32[4,640,11008]{2,1,0} %divide.189, f32[4,640,11008]{2,1,0} %subtract.190), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %call.358 = (f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) call(f32[] %multiply.285, f32[] %get-tuple-element.185, f32[] %reduce.277, s32[1]{0} %constant.98, s32[4,640,1,3]{3,2,1,0} %concatenate.244, /*index=5*/f32[4,640]{1,0} %reduce.268, f32[4,640,32000]{2,1,0} %exponential.263, f32[4,640,4096]{2,1,0} %multiply.221, f32[4096,32000]{1,0} %convert.222, f32[4,640,4096]{2,1,0} %multiply.215, /*index=10*/f32[1,1,4096]{2,1,0} %reshape.217, f32[4,640,4096]{2,1,0} %add.198, f32[4,640,1]{2,1,0} %multiply.211, f32[4,640,4096]{2,1,0} %multiply.200, f32[4,640,1]{2,1,0} %rsqrt.209, /*index=15*/f32[4,640,11008]{2,1,0} %multiply.195, f32[11008,4096]{1,0} %convert.196, f32[4,640,11008]{2,1,0} %multiply.192, f32[4096,11008]{1,0} %convert.193, f32[4,640,11008]{2,1,0} %dot.194, /*index=20*/f32[4,640,11008]{2,1,0} %multiply.191, f32[4,640,11008]{2,1,0} %divide.189), to_apply=%pipeline_marker_0.311
  %get-tuple-element.359 = f32[] get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=0
  %get-tuple-element.360 = f32[] get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=1
  %get-tuple-element.361 = f32[] get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=2
  %get-tuple-element.362 = s32[1]{0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=3
  %get-tuple-element.363 = s32[4,640,1,3]{3,2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=4
  %get-tuple-element.364 = f32[4,640]{1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=5
  %get-tuple-element.365 = f32[4,640,32000]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=6
  %get-tuple-element.366 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=7
  %get-tuple-element.367 = f32[4096,32000]{1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=8
  %get-tuple-element.368 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=9
  %get-tuple-element.369 = f32[1,1,4096]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=10
  %get-tuple-element.370 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=11
  %get-tuple-element.371 = f32[4,640,1]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=12
  %get-tuple-element.372 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=13
  %get-tuple-element.373 = f32[4,640,1]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=14
  %get-tuple-element.374 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=15
  %get-tuple-element.375 = f32[11008,4096]{1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=16
  %get-tuple-element.376 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=17
  %get-tuple-element.377 = f32[4096,11008]{1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=18
  %get-tuple-element.378 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=19
  %get-tuple-element.379 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=20
  %get-tuple-element.380 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.358), index=21
  %call.459 = (f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) call(f32[] %get-tuple-element.360, f32[] %get-tuple-element.361, pred[4,640]{1,0} %Arg_24.25, s32[1]{0} %get-tuple-element.362, s32[4,640,1,3]{3,2,1,0} %get-tuple-element.363, /*index=5*/f32[4,640]{1,0} %get-tuple-element.364, f32[4,640,32000]{2,1,0} %get-tuple-element.365, f32[4,640,4096]{2,1,0} %get-tuple-element.366, f32[4096,32000]{1,0} %get-tuple-element.367, f32[4,640,4096]{2,1,0} %get-tuple-element.368, /*index=10*/f32[1,1,4096]{2,1,0} %get-tuple-element.369, f32[4,640,4096]{2,1,0} %get-tuple-element.370, f32[4,640,1]{2,1,0} %get-tuple-element.371, f32[4,640,4096]{2,1,0} %get-tuple-element.372, f32[4,640,1]{2,1,0} %get-tuple-element.373, /*index=15*/f32[4,640,11008]{2,1,0} %get-tuple-element.374, f32[11008,4096]{1,0} %get-tuple-element.375, f32[4,640,11008]{2,1,0} %get-tuple-element.376, f32[4096,11008]{1,0} %get-tuple-element.377, f32[4,640,11008]{2,1,0} %get-tuple-element.378, /*index=20*/f32[4,640,11008]{2,1,0} %get-tuple-element.379, f32[4,640,11008]{2,1,0} %get-tuple-element.380, f32[4,640,4096]{2,1,0} %Arg_21.22, f32[4,640,11008]{2,1,0} %Arg_20.21), to_apply=%pipeline_marker_1.408
  %get-tuple-element.483 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=23
  %get-tuple-element.471 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=11
  %constant.92 = f32[] constant(0)
  %broadcast.93 = f32[4,640,32000]{2,1,0} broadcast(f32[] %constant.92), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4, 640, 32000) broadcast_dimensions=()]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %get-tuple-element.464 = s32[4,640,1,3]{3,2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=4
  %constant.94 = f32[] constant(0)
  %broadcast.95 = f32[4,640,1]{2,1,0} broadcast(f32[] %constant.94), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4, 640, 1) broadcast_dimensions=()]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %get-tuple-element.463 = s32[1]{0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=3
  %get-tuple-element.462 = pred[4,640]{1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=2
  %get-tuple-element.460 = f32[] get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=0
  %get-tuple-element.461 = f32[] get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=1
  %divide.484 = f32[] divide(f32[] %get-tuple-element.460, f32[] %get-tuple-element.461), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/Trainer/loss/loss.py" source_line=21}
  %broadcast.485 = f32[4,640]{1,0} broadcast(f32[] %divide.484), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4, 640) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/loss/loss.py" source_line=21}
  %select.486 = f32[4,640]{1,0} select(pred[4,640]{1,0} %get-tuple-element.462, f32[4,640]{1,0} %broadcast.485, f32[4,640]{1,0} %broadcast.97), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/loss/loss.py" source_line=21}
  %negate.487 = f32[4,640]{1,0} negate(f32[4,640]{1,0} %select.486), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/neg" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=238}
  %scatter.492 = f32[4,640,1]{2,1,0} scatter(f32[4,640,1]{2,1,0} %broadcast.95, s32[1]{0} %get-tuple-element.463, f32[4,640]{1,0} %negate.487), update_window_dims={0,1}, inserted_window_dims={2}, scatter_dims_to_operand_dims={2}, index_vector_dim=0, indices_are_sorted=true, unique_indices=true, to_apply=%region_6.488, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/scatter-add[update_consts=() dimension_numbers=ScatterDimensionNumbers(update_window_dims=(0, 1), inserted_window_dims=(2,), scatter_dims_to_operand_dims=(2,)) indices_are_sorted=True unique_indices=True mode=GatherScatterMode.PROMISE_IN_BOUNDS]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %scatter.497 = f32[4,640,32000]{2,1,0} scatter(f32[4,640,32000]{2,1,0} %broadcast.93, s32[4,640,1,3]{3,2,1,0} %get-tuple-element.464, f32[4,640,1]{2,1,0} %scatter.492), update_window_dims={}, inserted_window_dims={0,1,2}, scatter_dims_to_operand_dims={0,1,2}, index_vector_dim=3, to_apply=%region_7.493, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/scatter-add[update_consts=() dimension_numbers=ScatterDimensionNumbers(update_window_dims=(), inserted_window_dims=(0, 1, 2), scatter_dims_to_operand_dims=(0, 1, 2)) indices_are_sorted=False unique_indices=False mode=GatherScatterMode.FILL_OR_DROP]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=236}
  %get-tuple-element.465 = f32[4,640]{1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=5
  %divide.498 = f32[4,640]{1,0} divide(f32[4,640]{1,0} %select.486, f32[4,640]{1,0} %get-tuple-element.465), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=237}
  %broadcast.499 = f32[4,640,32000]{2,1,0} broadcast(f32[4,640]{1,0} %divide.498), dimensions={0,1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4, 640, 32000) broadcast_dimensions=(0, 1)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=237}
  %get-tuple-element.466 = f32[4,640,32000]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=6
  %multiply.500 = f32[4,640,32000]{2,1,0} multiply(f32[4,640,32000]{2,1,0} %broadcast.499, f32[4,640,32000]{2,1,0} %get-tuple-element.466), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=237}
  %add.501 = f32[4,640,32000]{2,1,0} add(f32[4,640,32000]{2,1,0} %scatter.497, f32[4,640,32000]{2,1,0} %multiply.500), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add_any" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/loss.py" source_line=237}
  %get-tuple-element.468 = f32[4096,32000]{1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=8
  %dot.505 = f32[4,640,4096]{2,1,0} dot(f32[4,640,32000]{2,1,0} %add.501, f32[4096,32000]{1,0} %get-tuple-element.468), lhs_contracting_dims={2}, rhs_contracting_dims={1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/dot_general[dimension_numbers=(((2,), (1,)), ((), ())) precision=None preferred_element_type=None]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %get-tuple-element.470 = f32[1,1,4096]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=10
  %broadcast.519 = f32[1,1,4096]{2,1,0} broadcast(f32[1,1,4096]{2,1,0} %get-tuple-element.470), dimensions={0,1,2}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %reshape.520 = f32[4096]{0} reshape(f32[1,1,4096]{2,1,0} %broadcast.519), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %broadcast.521 = f32[4,640,4096]{2,1,0} broadcast(f32[4096]{0} %reshape.520), dimensions={2}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %multiply.522 = f32[4,640,4096]{2,1,0} multiply(f32[4,640,4096]{2,1,0} %dot.505, f32[4,640,4096]{2,1,0} %broadcast.521), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %multiply.523 = f32[4,640,4096]{2,1,0} multiply(f32[4,640,4096]{2,1,0} %get-tuple-element.471, f32[4,640,4096]{2,1,0} %multiply.522), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %reduce.528 = f32[4,640]{1,0} reduce(f32[4,640,4096]{2,1,0} %multiply.523, f32[] %constant.134), dimensions={2}, to_apply=%region_10.524, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(2,)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %reshape.529 = f32[4,640,1]{2,1,0} reshape(f32[4,640]{1,0} %reduce.528), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reshape[new_sizes=(4, 640, 1) dimensions=None]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %get-tuple-element.472 = f32[4,640,1]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=12
  %multiply.530 = f32[4,640,1]{2,1,0} multiply(f32[4,640,1]{2,1,0} %reshape.529, f32[4,640,1]{2,1,0} %get-tuple-element.472), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %divide.531 = f32[4,640,1]{2,1,0} divide(f32[4,640,1]{2,1,0} %multiply.530, f32[4,640,1]{2,1,0} %broadcast.91), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %reduce.536 = f32[4,640]{1,0} reduce(f32[4,640,1]{2,1,0} %divide.531, f32[] %constant.134), dimensions={2}, to_apply=%region_11.532, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(2,)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %broadcast.537 = f32[4,640,4096]{2,1,0} broadcast(f32[4,640]{1,0} %reduce.536), dimensions={0,1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4, 640, 4096) broadcast_dimensions=(0, 1)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %get-tuple-element.473 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=13
  %multiply.538 = f32[4,640,4096]{2,1,0} multiply(f32[4,640,4096]{2,1,0} %broadcast.537, f32[4,640,4096]{2,1,0} %get-tuple-element.473), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %get-tuple-element.474 = f32[4,640,1]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=14
  %broadcast.539 = f32[4,640,1]{2,1,0} broadcast(f32[4,640,1]{2,1,0} %get-tuple-element.474), dimensions={0,1,2}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %reshape.540 = f32[4,640]{1,0} reshape(f32[4,640,1]{2,1,0} %broadcast.539), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %broadcast.541 = f32[4,640,4096]{2,1,0} broadcast(f32[4,640]{1,0} %reshape.540), dimensions={0,1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %multiply.542 = f32[4,640,4096]{2,1,0} multiply(f32[4,640,4096]{2,1,0} %multiply.522, f32[4,640,4096]{2,1,0} %broadcast.541), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %add.543 = f32[4,640,4096]{2,1,0} add(f32[4,640,4096]{2,1,0} %multiply.538, f32[4,640,4096]{2,1,0} %multiply.542), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add_any" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=26}
  %get-tuple-element.476 = f32[11008,4096]{1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=16
  %dot.547 = f32[4,640,11008]{2,1,0} dot(f32[4,640,4096]{2,1,0} %add.543, f32[11008,4096]{1,0} %get-tuple-element.476), lhs_contracting_dims={2}, rhs_contracting_dims={1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/dot_general[dimension_numbers=(((2,), (1,)), ((), ())) precision=None preferred_element_type=None]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %get-tuple-element.479 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=19
  %multiply.553 = f32[4,640,11008]{2,1,0} multiply(f32[4,640,11008]{2,1,0} %dot.547, f32[4,640,11008]{2,1,0} %get-tuple-element.479), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %multiply.554 = f32[4,640,11008]{2,1,0} multiply(f32[4,640,11008]{2,1,0} %get-tuple-element.483, f32[4,640,11008]{2,1,0} %multiply.553), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %get-tuple-element.480 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=20
  %multiply.555 = f32[4,640,11008]{2,1,0} multiply(f32[4,640,11008]{2,1,0} %multiply.554, f32[4,640,11008]{2,1,0} %get-tuple-element.480), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %get-tuple-element.481 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=21
  %multiply.556 = f32[4,640,11008]{2,1,0} multiply(f32[4,640,11008]{2,1,0} %multiply.553, f32[4,640,11008]{2,1,0} %get-tuple-element.481), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %add.557 = f32[4,640,11008]{2,1,0} add(f32[4,640,11008]{2,1,0} %multiply.555, f32[4,640,11008]{2,1,0} %multiply.556), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add_any" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %get-tuple-element.477 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=17
  %multiply.548 = f32[4,640,11008]{2,1,0} multiply(f32[4,640,11008]{2,1,0} %get-tuple-element.477, f32[4,640,11008]{2,1,0} %dot.547), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=255}
  %get-tuple-element.482 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=22
  %dot.549 = f32[11008,4096]{1,0} dot(f32[4,640,11008]{2,1,0} %multiply.548, f32[4,640,4096]{2,1,0} %get-tuple-element.482), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/dot_general[dimension_numbers=(((0, 1), (0, 1)), ((), ())) precision=None preferred_element_type=None]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %transpose.550 = f32[4096,11008]{0,1} transpose(f32[11008,4096]{1,0} %dot.549), dimensions={1,0}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/transpose[permutation=(1, 0)]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %convert.551 = f16[4096,11008]{0,1} convert(f32[4096,11008]{0,1} %transpose.550), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float16 weak_type=False]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %get-tuple-element.478 = f32[4096,11008]{1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=18
  %dot.552 = f32[4,640,4096]{2,1,0} dot(f32[4,640,11008]{2,1,0} %multiply.548, f32[4096,11008]{1,0} %get-tuple-element.478), lhs_contracting_dims={2}, rhs_contracting_dims={1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/dot_general[dimension_numbers=(((2,), (1,)), ((), ())) precision=None preferred_element_type=None]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %get-tuple-element.475 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=15
  %dot.544 = f32[4096,11008]{1,0} dot(f32[4,640,4096]{2,1,0} %add.543, f32[4,640,11008]{2,1,0} %get-tuple-element.475), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/dot_general[dimension_numbers=(((0, 1), (0, 1)), ((), ())) precision=None preferred_element_type=None]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %transpose.545 = f32[11008,4096]{0,1} transpose(f32[4096,11008]{1,0} %dot.544), dimensions={1,0}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/transpose[permutation=(1, 0)]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %convert.546 = f16[11008,4096]{0,1} convert(f32[11008,4096]{0,1} %transpose.545), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float16 weak_type=False]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %get-tuple-element.469 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=9
  %multiply.506 = f32[4,640,4096]{2,1,0} multiply(f32[4,640,4096]{2,1,0} %get-tuple-element.469, f32[4,640,4096]{2,1,0} %dot.505), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %reduce.511 = f32[4096]{0} reduce(f32[4,640,4096]{2,1,0} %multiply.506, f32[] %constant.134), dimensions={0,1}, to_apply=%region_8.507, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %reshape.512 = f32[1,1,4096]{2,1,0} reshape(f32[4096]{0} %reduce.511), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reshape[new_sizes=(1, 1, 4096) dimensions=None]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %reduce.517 = f32[4096]{0} reduce(f32[1,1,4096]{2,1,0} %reshape.512, f32[] %constant.134), dimensions={0,1}, to_apply=%region_9.513, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=31}
  %convert.518 = f16[4096]{0} convert(f32[4096]{0} %reduce.517), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float16 weak_type=False]" source_file="/data/hejing/distri/alpa/Trainer/llama/model.py" source_line=30}
  %get-tuple-element.467 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[], f32[], pred[4,640]{1,0}, s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=5*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=10*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=15*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=20*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,11008]{2,1,0}) %call.459), index=7
  %dot.502 = f32[32000,4096]{1,0} dot(f32[4,640,32000]{2,1,0} %add.501, f32[4,640,4096]{2,1,0} %get-tuple-element.467), lhs_contracting_dims={0,1}, rhs_contracting_dims={0,1}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/dot_general[dimension_numbers=(((0, 1), (0, 1)), ((), ())) precision=None preferred_element_type=None]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %transpose.503 = f32[4096,32000]{0,1} transpose(f32[32000,4096]{1,0} %dot.502), dimensions={1,0}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/transpose[permutation=(1, 0)]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %convert.504 = f16[4096,32000]{0,1} convert(f32[4096,32000]{0,1} %transpose.503), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float16 weak_type=False]" source_file="/usr/local/lib/python3.9/dist-packages/neurai/nn/layer/linear.py" source_line=95}
  %call.585 = (f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) call(f32[4,640,11008]{2,1,0} %add.557, f16[4096,11008]{0,1} %convert.551, f32[4,640,4096]{2,1,0} %dot.552, f16[11008,4096]{0,1} %convert.546, f32[4,640,4096]{2,1,0} %add.543, /*index=5*/f16[4096]{0} %convert.518, f16[4096,32000]{0,1} %convert.504), to_apply=%pipeline_marker_2.568
  %get-tuple-element.592 = f16[4096,32000]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.585), index=6
  %get-tuple-element.589 = f16[11008,4096]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.585), index=3
  %get-tuple-element.587 = f16[4096,11008]{1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.585), index=1
  %get-tuple-element.591 = f16[4096]{0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.585), index=5
  %call.674 = (f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) call(f32[] %Arg_0.1, s32[] %Arg_1.2, s32[] %Arg_2.3, f32[4096,32000]{1,0} %Arg_3.4, f32[11008,4096]{1,0} %Arg_4.5, /*index=5*/f32[4096,11008]{1,0} %Arg_5.6, f32[4096]{0} %Arg_6.7, f32[4096,32000]{1,0} %Arg_7.8, f32[11008,4096]{1,0} %Arg_8.9, f32[4096,11008]{1,0} %Arg_9.10, /*index=10*/f32[4096]{0} %Arg_10.11, s32[] %Arg_11.12, f16[4096,32000]{1,0} %Arg_12.13, f16[11008,4096]{1,0} %Arg_13.14, f16[4096,11008]{1,0} %Arg_14.15, /*index=15*/f16[4096]{0} %Arg_15.16, f32[4096,32000]{1,0} %Arg_16.17, f32[11008,4096]{1,0} %Arg_17.18, f32[4096,11008]{1,0} %Arg_18.19, f32[4096]{0} %Arg_19.20, /*index=20*/f32[] %get-tuple-element.359, f16[4096,32000]{1,0} %get-tuple-element.592, f16[11008,4096]{1,0} %get-tuple-element.589, f16[4096,11008]{1,0} %get-tuple-element.587, f16[4096]{0} %get-tuple-element.591), to_apply=%pipeline_marker_3.621
  %get-tuple-element.696 = f16[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=21
  %constant.88 = f16[] constant(1)
  %broadcast.89 = f16[4096,32000]{1,0} broadcast(f16[] %constant.88), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div"}
  %divide.701 = f16[4096,32000]{1,0} divide(f16[4096,32000]{1,0} %get-tuple-element.696, f16[4096,32000]{1,0} %broadcast.89), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div"}
  %convert.706 = f32[4096,32000]{1,0} convert(f16[4096,32000]{1,0} %divide.701), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=487}
  %get-tuple-element.675 = f32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=0
  %broadcast.707 = f32[4096,32000]{1,0} broadcast(f32[] %get-tuple-element.675), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=487}
  %divide.708 = f32[4096,32000]{1,0} divide(f32[4096,32000]{1,0} %convert.706, f32[4096,32000]{1,0} %broadcast.707), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=487}
  %is-finite.718 = pred[4096,32000]{1,0} is-finite(f32[4096,32000]{1,0} %divide.708), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/is_finite" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=493}
  %reduce.723 = pred[] reduce(pred[4096,32000]{1,0} %is-finite.718, pred[] %constant.130), dimensions={0,1}, to_apply=%region_12.719, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_and[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=493}
  %get-tuple-element.697 = f16[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=22
  %constant.86 = f16[] constant(1)
  %broadcast.87 = f16[11008,4096]{1,0} broadcast(f16[] %constant.86), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div"}
  %divide.702 = f16[11008,4096]{1,0} divide(f16[11008,4096]{1,0} %get-tuple-element.697, f16[11008,4096]{1,0} %broadcast.87), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div"}
  %convert.709 = f32[11008,4096]{1,0} convert(f16[11008,4096]{1,0} %divide.702), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=487}
  %broadcast.710 = f32[11008,4096]{1,0} broadcast(f32[] %get-tuple-element.675), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=487}
  %divide.711 = f32[11008,4096]{1,0} divide(f32[11008,4096]{1,0} %convert.709, f32[11008,4096]{1,0} %broadcast.710), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=487}
  %is-finite.724 = pred[11008,4096]{1,0} is-finite(f32[11008,4096]{1,0} %divide.711), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/is_finite" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=493}
  %reduce.729 = pred[] reduce(pred[11008,4096]{1,0} %is-finite.724, pred[] %constant.130), dimensions={0,1}, to_apply=%region_13.725, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_and[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=493}
  %and.742 = pred[] and(pred[] %reduce.723, pred[] %reduce.729), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/and"}
  %get-tuple-element.698 = f16[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=23
  %constant.84 = f16[] constant(1)
  %broadcast.85 = f16[4096,11008]{1,0} broadcast(f16[] %constant.84), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div"}
  %divide.703 = f16[4096,11008]{1,0} divide(f16[4096,11008]{1,0} %get-tuple-element.698, f16[4096,11008]{1,0} %broadcast.85), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div"}
  %convert.712 = f32[4096,11008]{1,0} convert(f16[4096,11008]{1,0} %divide.703), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=487}
  %broadcast.713 = f32[4096,11008]{1,0} broadcast(f32[] %get-tuple-element.675), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=487}
  %divide.714 = f32[4096,11008]{1,0} divide(f32[4096,11008]{1,0} %convert.712, f32[4096,11008]{1,0} %broadcast.713), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=487}
  %is-finite.730 = pred[4096,11008]{1,0} is-finite(f32[4096,11008]{1,0} %divide.714), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/is_finite" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=493}
  %reduce.735 = pred[] reduce(pred[4096,11008]{1,0} %is-finite.730, pred[] %constant.130), dimensions={0,1}, to_apply=%region_14.731, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_and[axes=(0, 1)]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=493}
  %and.743 = pred[] and(pred[] %and.742, pred[] %reduce.735), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/and"}
  %get-tuple-element.699 = f16[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=24
  %constant.82 = f16[] constant(1)
  %broadcast.83 = f16[4096]{0} broadcast(f16[] %constant.82), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div"}
  %divide.704 = f16[4096]{0} divide(f16[4096]{0} %get-tuple-element.699, f16[4096]{0} %broadcast.83), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div"}
  %convert.715 = f32[4096]{0} convert(f16[4096]{0} %divide.704), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=487}
  %broadcast.716 = f32[4096]{0} broadcast(f32[] %get-tuple-element.675), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=487}
  %divide.717 = f32[4096]{0} divide(f32[4096]{0} %convert.715, f32[4096]{0} %broadcast.716), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=487}
  %is-finite.736 = pred[4096]{0} is-finite(f32[4096]{0} %divide.717), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/is_finite" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=493}
  %reduce.741 = pred[] reduce(pred[4096]{0} %is-finite.736, pred[] %constant.130), dimensions={0}, to_apply=%region_15.737, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_and[axes=(0,)]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=493}
  %and.744 = pred[] and(pred[] %and.743, pred[] %reduce.741), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/and"}
  %call.748 = pred[] call(pred[] %and.744), to_apply=%xla_fallback___builtin_CrossMeshAllReduce.745
  %get-tuple-element.676 = s32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=1
  %constant.129 = s32[] constant(2000)
  %compare.749 = pred[] compare(s32[] %get-tuple-element.676, s32[] %constant.129), direction=EQ, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/eq" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=495}
  %and.750 = pred[] and(pred[] %compare.749, pred[] %call.748), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/and" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=496}
  %constant.135 = f32[] constant(2)
  %multiply.751 = f32[] multiply(f32[] %get-tuple-element.675, f32[] %constant.135), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=497}
  %select.752 = f32[] select(pred[] %and.750, f32[] %multiply.751, f32[] %get-tuple-element.675), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=496}
  %constant.128 = f32[] constant(0.5)
  %multiply.753 = f32[] multiply(f32[] %get-tuple-element.675, f32[] %constant.128), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=498}
  %select.754 = f32[] select(pred[] %call.748, f32[] %select.752, f32[] %multiply.753), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=499}
  %not.755 = pred[] not(pred[] %call.748), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/not" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=500}
  %or.756 = pred[] or(pred[] %compare.749, pred[] %not.755), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/or" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=500}
  %constant.132 = s32[] constant(0)
  %constant.131 = s32[] constant(1)
  %add.757 = s32[] add(s32[] %get-tuple-element.676, s32[] %constant.131), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=500}
  %select.758 = s32[] select(pred[] %or.756, s32[] %constant.132, s32[] %add.757), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=500}
  %get-tuple-element.677 = s32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=2
  %constant.127 = s32[] constant(2147483647)
  %compare.837 = pred[] compare(s32[] %get-tuple-element.677, s32[] %constant.127), direction=LT, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/lt" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/numerics.py" source_line=118}
  %add.838 = s32[] add(s32[] %get-tuple-element.677, s32[] %constant.131), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/numerics.py" source_line=118}
  %select.839 = s32[] select(pred[] %compare.837, s32[] %add.838, s32[] %constant.127), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/numerics.py" source_line=118}
  %select.930 = s32[] select(pred[] %call.748, s32[] %select.839, s32[] %get-tuple-element.677), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %broadcast.931 = pred[4096,32000]{1,0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4096, 32000) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %multiply.759 = f32[4096,32000]{1,0} multiply(f32[4096,32000]{1,0} %divide.708, f32[4096,32000]{1,0} %divide.708), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/numerics.py" source_line=45}
  %reduce.764 = f32[] reduce(f32[4096,32000]{1,0} %multiply.759, f32[] %constant.134), dimensions={0,1}, to_apply=%region_16.760, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/linear_algebra.py" source_line=30}
  %multiply.765 = f32[11008,4096]{1,0} multiply(f32[11008,4096]{1,0} %divide.711, f32[11008,4096]{1,0} %divide.711), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/numerics.py" source_line=45}
  %reduce.770 = f32[] reduce(f32[11008,4096]{1,0} %multiply.765, f32[] %constant.134), dimensions={0,1}, to_apply=%region_17.766, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/linear_algebra.py" source_line=30}
  %add.783 = f32[] add(f32[] %reduce.764, f32[] %reduce.770), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add"}
  %multiply.771 = f32[4096,11008]{1,0} multiply(f32[4096,11008]{1,0} %divide.714, f32[4096,11008]{1,0} %divide.714), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/numerics.py" source_line=45}
  %reduce.776 = f32[] reduce(f32[4096,11008]{1,0} %multiply.771, f32[] %constant.134), dimensions={0,1}, to_apply=%region_18.772, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0, 1)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/linear_algebra.py" source_line=30}
  %add.784 = f32[] add(f32[] %add.783, f32[] %reduce.776), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add"}
  %multiply.777 = f32[4096]{0} multiply(f32[4096]{0} %divide.717, f32[4096]{0} %divide.717), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/numerics.py" source_line=45}
  %reduce.782 = f32[] reduce(f32[4096]{0} %multiply.777, f32[] %constant.134), dimensions={0}, to_apply=%region_19.778, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/reduce_sum[axes=(0,)]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/linear_algebra.py" source_line=30}
  %add.785 = f32[] add(f32[] %add.784, f32[] %reduce.782), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add"}
  %constant.138 = f32[] constant(1)
  %divide.786 = f32[] divide(f32[] %add.785, f32[] %constant.138), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div"}
  %call.790 = f32[] call(f32[] %divide.786), to_apply=%xla_fallback___builtin_CrossMeshAllReduce_0.787
  %sqrt.791 = f32[] sqrt(f32[] %call.790), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sqrt" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/linear_algebra.py" source_line=29}
  %compare.792 = pred[] compare(f32[] %sqrt.791, f32[] %constant.138), direction=LT, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/lt" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=116}
  %broadcast.795 = pred[4096,32000]{1,0} broadcast(pred[] %compare.792), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %broadcast.793 = f32[4096,32000]{1,0} broadcast(f32[] %sqrt.791), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %divide.794 = f32[4096,32000]{1,0} divide(f32[4096,32000]{1,0} %divide.708, f32[4096,32000]{1,0} %broadcast.793), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %select.796 = f32[4096,32000]{1,0} select(pred[4096,32000]{1,0} %broadcast.795, f32[4096,32000]{1,0} %divide.708, f32[4096,32000]{1,0} %divide.794), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %constant.80 = f32[] constant(0.1)
  %broadcast.81 = f32[4096,32000]{1,0} broadcast(f32[] %constant.80), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %multiply.809 = f32[4096,32000]{1,0} multiply(f32[4096,32000]{1,0} %select.796, f32[4096,32000]{1,0} %broadcast.81), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %get-tuple-element.678 = f32[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=3
  %constant.78 = f32[] constant(0.9)
  %broadcast.79 = f32[4096,32000]{1,0} broadcast(f32[] %constant.78), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %multiply.810 = f32[4096,32000]{1,0} multiply(f32[4096,32000]{1,0} %get-tuple-element.678, f32[4096,32000]{1,0} %broadcast.79), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %add.811 = f32[4096,32000]{1,0} add(f32[4096,32000]{1,0} %multiply.809, f32[4096,32000]{1,0} %multiply.810), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %select.932 = f32[4096,32000]{1,0} select(pred[4096,32000]{1,0} %broadcast.931, f32[4096,32000]{1,0} %add.811, f32[4096,32000]{1,0} %get-tuple-element.678), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %broadcast.933 = pred[11008,4096]{1,0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(11008, 4096) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %broadcast.799 = pred[11008,4096]{1,0} broadcast(pred[] %compare.792), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %broadcast.797 = f32[11008,4096]{1,0} broadcast(f32[] %sqrt.791), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %divide.798 = f32[11008,4096]{1,0} divide(f32[11008,4096]{1,0} %divide.711, f32[11008,4096]{1,0} %broadcast.797), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %select.800 = f32[11008,4096]{1,0} select(pred[11008,4096]{1,0} %broadcast.799, f32[11008,4096]{1,0} %divide.711, f32[11008,4096]{1,0} %divide.798), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %constant.76 = f32[] constant(0.1)
  %broadcast.77 = f32[11008,4096]{1,0} broadcast(f32[] %constant.76), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %multiply.812 = f32[11008,4096]{1,0} multiply(f32[11008,4096]{1,0} %select.800, f32[11008,4096]{1,0} %broadcast.77), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %get-tuple-element.679 = f32[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=4
  %constant.74 = f32[] constant(0.9)
  %broadcast.75 = f32[11008,4096]{1,0} broadcast(f32[] %constant.74), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %multiply.813 = f32[11008,4096]{1,0} multiply(f32[11008,4096]{1,0} %get-tuple-element.679, f32[11008,4096]{1,0} %broadcast.75), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %add.814 = f32[11008,4096]{1,0} add(f32[11008,4096]{1,0} %multiply.812, f32[11008,4096]{1,0} %multiply.813), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %select.934 = f32[11008,4096]{1,0} select(pred[11008,4096]{1,0} %broadcast.933, f32[11008,4096]{1,0} %add.814, f32[11008,4096]{1,0} %get-tuple-element.679), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %broadcast.935 = pred[4096,11008]{1,0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4096, 11008) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %broadcast.803 = pred[4096,11008]{1,0} broadcast(pred[] %compare.792), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %broadcast.801 = f32[4096,11008]{1,0} broadcast(f32[] %sqrt.791), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %divide.802 = f32[4096,11008]{1,0} divide(f32[4096,11008]{1,0} %divide.714, f32[4096,11008]{1,0} %broadcast.801), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %select.804 = f32[4096,11008]{1,0} select(pred[4096,11008]{1,0} %broadcast.803, f32[4096,11008]{1,0} %divide.714, f32[4096,11008]{1,0} %divide.802), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %constant.72 = f32[] constant(0.1)
  %broadcast.73 = f32[4096,11008]{1,0} broadcast(f32[] %constant.72), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %multiply.815 = f32[4096,11008]{1,0} multiply(f32[4096,11008]{1,0} %select.804, f32[4096,11008]{1,0} %broadcast.73), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %get-tuple-element.680 = f32[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=5
  %constant.70 = f32[] constant(0.9)
  %broadcast.71 = f32[4096,11008]{1,0} broadcast(f32[] %constant.70), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %multiply.816 = f32[4096,11008]{1,0} multiply(f32[4096,11008]{1,0} %get-tuple-element.680, f32[4096,11008]{1,0} %broadcast.71), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %add.817 = f32[4096,11008]{1,0} add(f32[4096,11008]{1,0} %multiply.815, f32[4096,11008]{1,0} %multiply.816), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %select.936 = f32[4096,11008]{1,0} select(pred[4096,11008]{1,0} %broadcast.935, f32[4096,11008]{1,0} %add.817, f32[4096,11008]{1,0} %get-tuple-element.680), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %broadcast.937 = pred[4096]{0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4096,) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %broadcast.807 = pred[4096]{0} broadcast(pred[] %compare.792), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %broadcast.805 = f32[4096]{0} broadcast(f32[] %sqrt.791), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %divide.806 = f32[4096]{0} divide(f32[4096]{0} %divide.717, f32[4096]{0} %broadcast.805), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %select.808 = f32[4096]{0} select(pred[4096]{0} %broadcast.807, f32[4096]{0} %divide.717, f32[4096]{0} %divide.806), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/clipping.py" source_line=120}
  %constant.68 = f32[] constant(0.1)
  %broadcast.69 = f32[4096]{0} broadcast(f32[] %constant.68), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %multiply.818 = f32[4096]{0} multiply(f32[4096]{0} %select.808, f32[4096]{0} %broadcast.69), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %get-tuple-element.681 = f32[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=6
  %constant.66 = f32[] constant(0.9)
  %broadcast.67 = f32[4096]{0} broadcast(f32[] %constant.66), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %multiply.819 = f32[4096]{0} multiply(f32[4096]{0} %get-tuple-element.681, f32[4096]{0} %broadcast.67), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %add.820 = f32[4096]{0} add(f32[4096]{0} %multiply.818, f32[4096]{0} %multiply.819), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=84}
  %select.938 = f32[4096]{0} select(pred[4096]{0} %broadcast.937, f32[4096]{0} %add.820, f32[4096]{0} %get-tuple-element.681), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %broadcast.939 = pred[4096,32000]{1,0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4096, 32000) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %multiply.821 = f32[4096,32000]{1,0} multiply(f32[4096,32000]{1,0} %select.796, f32[4096,32000]{1,0} %select.796), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=98}
  %constant.64 = f32[] constant(0.01)
  %broadcast.65 = f32[4096,32000]{1,0} broadcast(f32[] %constant.64), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %multiply.822 = f32[4096,32000]{1,0} multiply(f32[4096,32000]{1,0} %multiply.821, f32[4096,32000]{1,0} %broadcast.65), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %get-tuple-element.682 = f32[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=7
  %constant.62 = f32[] constant(0.99)
  %broadcast.63 = f32[4096,32000]{1,0} broadcast(f32[] %constant.62), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %multiply.823 = f32[4096,32000]{1,0} multiply(f32[4096,32000]{1,0} %get-tuple-element.682, f32[4096,32000]{1,0} %broadcast.63), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %add.824 = f32[4096,32000]{1,0} add(f32[4096,32000]{1,0} %multiply.822, f32[4096,32000]{1,0} %multiply.823), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %select.940 = f32[4096,32000]{1,0} select(pred[4096,32000]{1,0} %broadcast.939, f32[4096,32000]{1,0} %add.824, f32[4096,32000]{1,0} %get-tuple-element.682), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %broadcast.941 = pred[11008,4096]{1,0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(11008, 4096) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %multiply.825 = f32[11008,4096]{1,0} multiply(f32[11008,4096]{1,0} %select.800, f32[11008,4096]{1,0} %select.800), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=98}
  %constant.60 = f32[] constant(0.01)
  %broadcast.61 = f32[11008,4096]{1,0} broadcast(f32[] %constant.60), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %multiply.826 = f32[11008,4096]{1,0} multiply(f32[11008,4096]{1,0} %multiply.825, f32[11008,4096]{1,0} %broadcast.61), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %get-tuple-element.683 = f32[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=8
  %constant.58 = f32[] constant(0.99)
  %broadcast.59 = f32[11008,4096]{1,0} broadcast(f32[] %constant.58), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %multiply.827 = f32[11008,4096]{1,0} multiply(f32[11008,4096]{1,0} %get-tuple-element.683, f32[11008,4096]{1,0} %broadcast.59), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %add.828 = f32[11008,4096]{1,0} add(f32[11008,4096]{1,0} %multiply.826, f32[11008,4096]{1,0} %multiply.827), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %select.942 = f32[11008,4096]{1,0} select(pred[11008,4096]{1,0} %broadcast.941, f32[11008,4096]{1,0} %add.828, f32[11008,4096]{1,0} %get-tuple-element.683), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %broadcast.943 = pred[4096,11008]{1,0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4096, 11008) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %multiply.829 = f32[4096,11008]{1,0} multiply(f32[4096,11008]{1,0} %select.804, f32[4096,11008]{1,0} %select.804), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=98}
  %constant.56 = f32[] constant(0.01)
  %broadcast.57 = f32[4096,11008]{1,0} broadcast(f32[] %constant.56), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %multiply.830 = f32[4096,11008]{1,0} multiply(f32[4096,11008]{1,0} %multiply.829, f32[4096,11008]{1,0} %broadcast.57), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %get-tuple-element.684 = f32[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=9
  %constant.54 = f32[] constant(0.99)
  %broadcast.55 = f32[4096,11008]{1,0} broadcast(f32[] %constant.54), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %multiply.831 = f32[4096,11008]{1,0} multiply(f32[4096,11008]{1,0} %get-tuple-element.684, f32[4096,11008]{1,0} %broadcast.55), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %add.832 = f32[4096,11008]{1,0} add(f32[4096,11008]{1,0} %multiply.830, f32[4096,11008]{1,0} %multiply.831), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %select.944 = f32[4096,11008]{1,0} select(pred[4096,11008]{1,0} %broadcast.943, f32[4096,11008]{1,0} %add.832, f32[4096,11008]{1,0} %get-tuple-element.684), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %broadcast.945 = pred[4096]{0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4096,) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %multiply.833 = f32[4096]{0} multiply(f32[4096]{0} %select.808, f32[4096]{0} %select.808), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=98}
  %constant.52 = f32[] constant(0.01)
  %broadcast.53 = f32[4096]{0} broadcast(f32[] %constant.52), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %multiply.834 = f32[4096]{0} multiply(f32[4096]{0} %multiply.833, f32[4096]{0} %broadcast.53), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %get-tuple-element.685 = f32[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=10
  %constant.50 = f32[] constant(0.99)
  %broadcast.51 = f32[4096]{0} broadcast(f32[] %constant.50), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %multiply.835 = f32[4096]{0} multiply(f32[4096]{0} %get-tuple-element.685, f32[4096]{0} %broadcast.51), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %add.836 = f32[4096]{0} add(f32[4096]{0} %multiply.834, f32[4096]{0} %multiply.835), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=107}
  %select.946 = f32[4096]{0} select(pred[4096]{0} %broadcast.945, f32[4096]{0} %add.836, f32[4096]{0} %get-tuple-element.685), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %get-tuple-element.686 = s32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=11
  %compare.911 = pred[] compare(s32[] %get-tuple-element.686, s32[] %constant.127), direction=LT, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/lt" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/numerics.py" source_line=118}
  %add.912 = s32[] add(s32[] %get-tuple-element.686, s32[] %constant.131), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/numerics.py" source_line=118}
  %select.913 = s32[] select(pred[] %compare.911, s32[] %add.912, s32[] %constant.127), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/numerics.py" source_line=118}
  %select.947 = s32[] select(pred[] %call.748, s32[] %select.913, s32[] %get-tuple-element.686), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=66}
  %broadcast.948 = pred[4096,32000]{1,0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4096, 32000) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=69}
  %get-tuple-element.691 = f32[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=16
  %constant.126 = s32[] constant(70)
  %compare.890 = pred[] compare(s32[] %get-tuple-element.686, s32[] %constant.126), direction=LT, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/lt" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=399}
  %subtract.882 = s32[] subtract(s32[] %get-tuple-element.686, s32[] %constant.132), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sub" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=87}
  %maximum.883 = s32[] maximum(s32[] %subtract.882, s32[] %constant.132), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/max" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=87}
  %minimum.884 = s32[] minimum(s32[] %maximum.883, s32[] %constant.126), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/min" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=87}
  %convert.885 = f32[] convert(s32[] %minimum.884), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=88}
  %constant.125 = f32[] constant(70)
  %divide.886 = f32[] divide(f32[] %convert.885, f32[] %constant.125), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=88}
  %subtract.887 = f32[] subtract(f32[] %constant.138, f32[] %divide.886), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sub" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=88}
  %constant.124 = f32[] constant(-1e-05)
  %multiply.888 = f32[] multiply(f32[] %subtract.887, f32[] %constant.124), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=89}
  %constant.123 = f32[] constant(1e-05)
  %add.889 = f32[] add(f32[] %multiply.888, f32[] %constant.123), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=89}
  %subtract.891 = s32[] subtract(s32[] %get-tuple-element.686, s32[] %constant.126), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sub" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=399}
  %constant.122 = s32[] constant(2265)
  %minimum.892 = s32[] minimum(s32[] %subtract.891, s32[] %constant.122), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/min" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=240}
  %convert.893 = f32[] convert(s32[] %minimum.892), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=True]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=241}
  %constant.121 = f32[] constant(3.14159274)
  %multiply.894 = f32[] multiply(f32[] %convert.893, f32[] %constant.121), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=241}
  %constant.120 = f32[] constant(2265)
  %divide.895 = f32[] divide(f32[] %multiply.894, f32[] %constant.120), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=241}
  %cosine.896 = f32[] cosine(f32[] %divide.895), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/cos" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=241}
  %add.897 = f32[] add(f32[] %cosine.896, f32[] %constant.138), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=241}
  %multiply.898 = f32[] multiply(f32[] %add.897, f32[] %constant.128), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=241}
  %power.899 = f32[] power(f32[] %multiply.898, f32[] %constant.138), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pow" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=242}
  %multiply.900 = f32[] multiply(f32[] %power.899, f32[] %constant.123), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=243}
  %select.901 = f32[] select(pred[] %compare.890, f32[] %add.889, f32[] %multiply.900), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/schedule.py" source_line=399}
  %constant.119 = f32[] constant(-1)
  %multiply.902 = f32[] multiply(f32[] %select.901, f32[] %constant.119), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/alias.py" source_line=38}
  %broadcast.903 = f32[4096,32000]{1,0} broadcast(f32[] %multiply.902), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=807}
  %constant.136 = f32[] constant(0.9)
  %convert.840 = f32[] convert(s32[] %select.839), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=118}
  %power.841 = f32[] power(f32[] %constant.136, f32[] %convert.840), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pow" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=118}
  %subtract.842 = f32[] subtract(f32[] %constant.138, f32[] %power.841), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sub" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=118}
  %broadcast.843 = f32[4096,32000]{1,0} broadcast(f32[] %subtract.842), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %divide.844 = f32[4096,32000]{1,0} divide(f32[4096,32000]{1,0} %add.811, f32[4096,32000]{1,0} %broadcast.843), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %constant.137 = f32[] constant(0.99)
  %convert.851 = f32[] convert(s32[] %select.839), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float32 weak_type=False]" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=118}
  %power.852 = f32[] power(f32[] %constant.137, f32[] %convert.851), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/pow" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=118}
  %subtract.853 = f32[] subtract(f32[] %constant.138, f32[] %power.852), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sub" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=118}
  %broadcast.854 = f32[4096,32000]{1,0} broadcast(f32[] %subtract.853), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %divide.855 = f32[4096,32000]{1,0} divide(f32[4096,32000]{1,0} %add.824, f32[4096,32000]{1,0} %broadcast.854), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %sqrt.862 = f32[4096,32000]{1,0} sqrt(f32[4096,32000]{1,0} %divide.855), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sqrt" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %constant.48 = f32[] constant(1e-08)
  %broadcast.49 = f32[4096,32000]{1,0} broadcast(f32[] %constant.48), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %add.863 = f32[4096,32000]{1,0} add(f32[4096,32000]{1,0} %sqrt.862, f32[4096,32000]{1,0} %broadcast.49), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %divide.864 = f32[4096,32000]{1,0} divide(f32[4096,32000]{1,0} %divide.844, f32[4096,32000]{1,0} %add.863), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %constant.40 = f32[] constant(0)
  %broadcast.41 = f32[4096,32000]{1,0} broadcast(f32[] %constant.40), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=770}
  %multiply.874 = f32[4096,32000]{1,0} multiply(f32[4096,32000]{1,0} %get-tuple-element.691, f32[4096,32000]{1,0} %broadcast.41), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=770}
  %add.875 = f32[4096,32000]{1,0} add(f32[4096,32000]{1,0} %divide.864, f32[4096,32000]{1,0} %multiply.874), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=770}
  %multiply.904 = f32[4096,32000]{1,0} multiply(f32[4096,32000]{1,0} %broadcast.903, f32[4096,32000]{1,0} %add.875), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=807}
  %add.914 = f32[4096,32000]{1,0} add(f32[4096,32000]{1,0} %get-tuple-element.691, f32[4096,32000]{1,0} %multiply.904), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/update.py" source_line=43}
  %convert.918 = f16[4096,32000]{1,0} convert(f32[4096,32000]{1,0} %add.914), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float16 weak_type=False]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=323}
  %get-tuple-element.687 = f16[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=12
  %constant.32 = f16[] constant(0)
  %broadcast.33 = f16[4096,32000]{1,0} broadcast(f16[] %constant.32), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=330}
  %multiply.922 = f16[4096,32000]{1,0} multiply(f16[4096,32000]{1,0} %get-tuple-element.687, f16[4096,32000]{1,0} %broadcast.33), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=330}
  %add.923 = f16[4096,32000]{1,0} add(f16[4096,32000]{1,0} %convert.918, f16[4096,32000]{1,0} %multiply.922), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=330}
  %select.949 = f16[4096,32000]{1,0} select(pred[4096,32000]{1,0} %broadcast.948, f16[4096,32000]{1,0} %add.923, f16[4096,32000]{1,0} %get-tuple-element.687), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=69}
  %broadcast.950 = pred[11008,4096]{1,0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(11008, 4096) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=69}
  %get-tuple-element.692 = f32[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=17
  %broadcast.905 = f32[11008,4096]{1,0} broadcast(f32[] %multiply.902), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=807}
  %broadcast.845 = f32[11008,4096]{1,0} broadcast(f32[] %subtract.842), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %divide.846 = f32[11008,4096]{1,0} divide(f32[11008,4096]{1,0} %add.814, f32[11008,4096]{1,0} %broadcast.845), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %broadcast.856 = f32[11008,4096]{1,0} broadcast(f32[] %subtract.853), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %divide.857 = f32[11008,4096]{1,0} divide(f32[11008,4096]{1,0} %add.828, f32[11008,4096]{1,0} %broadcast.856), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %sqrt.865 = f32[11008,4096]{1,0} sqrt(f32[11008,4096]{1,0} %divide.857), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sqrt" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %constant.46 = f32[] constant(1e-08)
  %broadcast.47 = f32[11008,4096]{1,0} broadcast(f32[] %constant.46), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %add.866 = f32[11008,4096]{1,0} add(f32[11008,4096]{1,0} %sqrt.865, f32[11008,4096]{1,0} %broadcast.47), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %divide.867 = f32[11008,4096]{1,0} divide(f32[11008,4096]{1,0} %divide.846, f32[11008,4096]{1,0} %add.866), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %constant.38 = f32[] constant(0)
  %broadcast.39 = f32[11008,4096]{1,0} broadcast(f32[] %constant.38), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=770}
  %multiply.876 = f32[11008,4096]{1,0} multiply(f32[11008,4096]{1,0} %get-tuple-element.692, f32[11008,4096]{1,0} %broadcast.39), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=770}
  %add.877 = f32[11008,4096]{1,0} add(f32[11008,4096]{1,0} %divide.867, f32[11008,4096]{1,0} %multiply.876), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=770}
  %multiply.906 = f32[11008,4096]{1,0} multiply(f32[11008,4096]{1,0} %broadcast.905, f32[11008,4096]{1,0} %add.877), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=807}
  %add.915 = f32[11008,4096]{1,0} add(f32[11008,4096]{1,0} %get-tuple-element.692, f32[11008,4096]{1,0} %multiply.906), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/update.py" source_line=43}
  %convert.919 = f16[11008,4096]{1,0} convert(f32[11008,4096]{1,0} %add.915), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float16 weak_type=False]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=323}
  %get-tuple-element.688 = f16[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=13
  %constant.30 = f16[] constant(0)
  %broadcast.31 = f16[11008,4096]{1,0} broadcast(f16[] %constant.30), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=330}
  %multiply.924 = f16[11008,4096]{1,0} multiply(f16[11008,4096]{1,0} %get-tuple-element.688, f16[11008,4096]{1,0} %broadcast.31), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=330}
  %add.925 = f16[11008,4096]{1,0} add(f16[11008,4096]{1,0} %convert.919, f16[11008,4096]{1,0} %multiply.924), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=330}
  %select.951 = f16[11008,4096]{1,0} select(pred[11008,4096]{1,0} %broadcast.950, f16[11008,4096]{1,0} %add.925, f16[11008,4096]{1,0} %get-tuple-element.688), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=69}
  %broadcast.952 = pred[4096,11008]{1,0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4096, 11008) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=69}
  %get-tuple-element.693 = f32[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=18
  %broadcast.907 = f32[4096,11008]{1,0} broadcast(f32[] %multiply.902), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=807}
  %broadcast.847 = f32[4096,11008]{1,0} broadcast(f32[] %subtract.842), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %divide.848 = f32[4096,11008]{1,0} divide(f32[4096,11008]{1,0} %add.817, f32[4096,11008]{1,0} %broadcast.847), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %broadcast.858 = f32[4096,11008]{1,0} broadcast(f32[] %subtract.853), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %divide.859 = f32[4096,11008]{1,0} divide(f32[4096,11008]{1,0} %add.832, f32[4096,11008]{1,0} %broadcast.858), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %sqrt.868 = f32[4096,11008]{1,0} sqrt(f32[4096,11008]{1,0} %divide.859), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sqrt" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %constant.44 = f32[] constant(1e-08)
  %broadcast.45 = f32[4096,11008]{1,0} broadcast(f32[] %constant.44), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %add.869 = f32[4096,11008]{1,0} add(f32[4096,11008]{1,0} %sqrt.868, f32[4096,11008]{1,0} %broadcast.45), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %divide.870 = f32[4096,11008]{1,0} divide(f32[4096,11008]{1,0} %divide.848, f32[4096,11008]{1,0} %add.869), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %constant.36 = f32[] constant(0)
  %broadcast.37 = f32[4096,11008]{1,0} broadcast(f32[] %constant.36), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=770}
  %multiply.878 = f32[4096,11008]{1,0} multiply(f32[4096,11008]{1,0} %get-tuple-element.693, f32[4096,11008]{1,0} %broadcast.37), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=770}
  %add.879 = f32[4096,11008]{1,0} add(f32[4096,11008]{1,0} %divide.870, f32[4096,11008]{1,0} %multiply.878), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=770}
  %multiply.908 = f32[4096,11008]{1,0} multiply(f32[4096,11008]{1,0} %broadcast.907, f32[4096,11008]{1,0} %add.879), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=807}
  %add.916 = f32[4096,11008]{1,0} add(f32[4096,11008]{1,0} %get-tuple-element.693, f32[4096,11008]{1,0} %multiply.908), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/update.py" source_line=43}
  %convert.920 = f16[4096,11008]{1,0} convert(f32[4096,11008]{1,0} %add.916), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float16 weak_type=False]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=323}
  %get-tuple-element.689 = f16[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=14
  %constant.28 = f16[] constant(0)
  %broadcast.29 = f16[4096,11008]{1,0} broadcast(f16[] %constant.28), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=330}
  %multiply.926 = f16[4096,11008]{1,0} multiply(f16[4096,11008]{1,0} %get-tuple-element.689, f16[4096,11008]{1,0} %broadcast.29), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=330}
  %add.927 = f16[4096,11008]{1,0} add(f16[4096,11008]{1,0} %convert.920, f16[4096,11008]{1,0} %multiply.926), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=330}
  %select.953 = f16[4096,11008]{1,0} select(pred[4096,11008]{1,0} %broadcast.952, f16[4096,11008]{1,0} %add.927, f16[4096,11008]{1,0} %get-tuple-element.689), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=69}
  %broadcast.954 = pred[4096]{0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4096,) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=69}
  %get-tuple-element.694 = f32[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=19
  %broadcast.909 = f32[4096]{0} broadcast(f32[] %multiply.902), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=807}
  %broadcast.849 = f32[4096]{0} broadcast(f32[] %subtract.842), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %divide.850 = f32[4096]{0} divide(f32[4096]{0} %add.820, f32[4096]{0} %broadcast.849), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %broadcast.860 = f32[4096]{0} broadcast(f32[] %subtract.853), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %divide.861 = f32[4096]{0} divide(f32[4096]{0} %add.836, f32[4096]{0} %broadcast.860), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=122}
  %sqrt.871 = f32[4096]{0} sqrt(f32[4096]{0} %divide.861), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/sqrt" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %constant.42 = f32[] constant(1e-08)
  %broadcast.43 = f32[4096]{0} broadcast(f32[] %constant.42), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %add.872 = f32[4096]{0} add(f32[4096]{0} %sqrt.871, f32[4096]{0} %broadcast.43), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %divide.873 = f32[4096]{0} divide(f32[4096]{0} %divide.850, f32[4096]{0} %add.872), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=348}
  %constant.34 = f32[] constant(0)
  %broadcast.35 = f32[4096]{0} broadcast(f32[] %constant.34), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=770}
  %multiply.880 = f32[4096]{0} multiply(f32[4096]{0} %get-tuple-element.694, f32[4096]{0} %broadcast.35), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=770}
  %add.881 = f32[4096]{0} add(f32[4096]{0} %divide.873, f32[4096]{0} %multiply.880), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=770}
  %multiply.910 = f32[4096]{0} multiply(f32[4096]{0} %broadcast.909, f32[4096]{0} %add.881), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/transform.py" source_line=807}
  %add.917 = f32[4096]{0} add(f32[4096]{0} %get-tuple-element.694, f32[4096]{0} %multiply.910), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/usr/local/lib/python3.9/dist-packages/optax/_src/update.py" source_line=43}
  %convert.921 = f16[4096]{0} convert(f32[4096]{0} %add.917), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/convert_element_type[new_dtype=float16 weak_type=False]" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=323}
  %get-tuple-element.690 = f16[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=15
  %constant.26 = f16[] constant(0)
  %broadcast.27 = f16[4096]{0} broadcast(f16[] %constant.26), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=330}
  %multiply.928 = f16[4096]{0} multiply(f16[4096]{0} %get-tuple-element.690, f16[4096]{0} %broadcast.27), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/mul" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=330}
  %add.929 = f16[4096]{0} add(f16[4096]{0} %convert.921, f16[4096]{0} %multiply.928), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/add" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=330}
  %select.955 = f16[4096]{0} select(pred[4096]{0} %broadcast.954, f16[4096]{0} %add.929, f16[4096]{0} %get-tuple-element.690), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=69}
  %broadcast.956 = pred[4096,32000]{1,0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4096, 32000) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=72}
  %select.957 = f32[4096,32000]{1,0} select(pred[4096,32000]{1,0} %broadcast.956, f32[4096,32000]{1,0} %add.914, f32[4096,32000]{1,0} %get-tuple-element.691), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=72}
  %broadcast.958 = pred[11008,4096]{1,0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(11008, 4096) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=72}
  %select.959 = f32[11008,4096]{1,0} select(pred[11008,4096]{1,0} %broadcast.958, f32[11008,4096]{1,0} %add.915, f32[11008,4096]{1,0} %get-tuple-element.692), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=72}
  %broadcast.960 = pred[4096,11008]{1,0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4096, 11008) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=72}
  %select.961 = f32[4096,11008]{1,0} select(pred[4096,11008]{1,0} %broadcast.960, f32[4096,11008]{1,0} %add.916, f32[4096,11008]{1,0} %get-tuple-element.693), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=72}
  %broadcast.962 = pred[4096]{0} broadcast(pred[] %call.748), dimensions={}, metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/broadcast_in_dim[shape=(4096,) broadcast_dimensions=()]" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=72}
  %select.963 = f32[4096]{0} select(pred[4096]{0} %broadcast.962, f32[4096]{0} %add.917, f32[4096]{0} %get-tuple-element.694), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/select_n" source_file="/data/hejing/distri/alpa/Trainer/train_ray_batch.py" source_line=72}
  %get-tuple-element.695 = f32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, f16[4096]{0}) %call.674), index=20
  %divide.700 = f32[] divide(f32[] %get-tuple-element.695, f32[] %constant.138), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div"}
  %divide.705 = f32[] divide(f32[] %divide.700, f32[] %get-tuple-element.675), metadata={op_name="parallelize(train_step_pipeshard_parallel_mesh_1)/jit(main)/div" source_file="/data/hejing/distri/alpa/alpa/model/model_util.py" source_line=484}
  %call.1033 = (f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) call(f32[] %select.754, s32[] %select.758, s32[] %select.930, f32[4096,32000]{1,0} %select.932, f32[11008,4096]{1,0} %select.934, /*index=5*/f32[4096,11008]{1,0} %select.936, f32[4096]{0} %select.938, f32[4096,32000]{1,0} %select.940, f32[11008,4096]{1,0} %select.942, f32[4096,11008]{1,0} %select.944, /*index=10*/f32[4096]{0} %select.946, s32[] %select.947, f16[4096,32000]{1,0} %select.949, f16[11008,4096]{1,0} %select.951, f16[4096,11008]{1,0} %select.953, /*index=15*/f16[4096]{0} %select.955, f32[4096,32000]{1,0} %select.957, f32[11008,4096]{1,0} %select.959, f32[4096,11008]{1,0} %select.961, f32[4096]{0} %select.963, /*index=20*/f32[] %divide.705), to_apply=%pipeline_marker_4.988
  %get-tuple-element.1034 = f32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=0
  %get-tuple-element.1035 = s32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=1
  %get-tuple-element.1036 = s32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=2
  %get-tuple-element.1037 = f32[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=3
  %get-tuple-element.1038 = f32[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=4
  %get-tuple-element.1039 = f32[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=5
  %get-tuple-element.1040 = f32[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=6
  %get-tuple-element.1041 = f32[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=7
  %get-tuple-element.1042 = f32[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=8
  %get-tuple-element.1043 = f32[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=9
  %get-tuple-element.1044 = f32[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=10
  %get-tuple-element.1045 = s32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=11
  %get-tuple-element.1046 = f16[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=12
  %get-tuple-element.1047 = f16[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=13
  %get-tuple-element.1048 = f16[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=14
  %get-tuple-element.1049 = f16[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=15
  %get-tuple-element.1050 = f32[4096,32000]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=16
  %get-tuple-element.1051 = f32[11008,4096]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=17
  %get-tuple-element.1052 = f32[4096,11008]{1,0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=18
  %get-tuple-element.1053 = f32[4096]{0} get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=19
  %get-tuple-element.586 = f32[4,640,11008]{2,1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.585), index=0
  %get-tuple-element.588 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.585), index=2
  %get-tuple-element.590 = f32[4,640,4096]{2,1,0} get-tuple-element((f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, /*index=5*/f16[4096]{0}, f16[4096,32000]{1,0}) %call.585), index=4
  %get-tuple-element.1054 = f32[] get-tuple-element((f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[]) %call.1033), index=20
  ROOT %tuple.1055 = (f32[], s32[], s32[], f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, /*index=5*/f32[4096,11008]{1,0}, f32[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, /*index=10*/f32[4096]{0}, s32[], f16[4096,32000]{1,0}, f16[11008,4096]{1,0}, f16[4096,11008]{1,0}, /*index=15*/f16[4096]{0}, f32[4096,32000]{1,0}, f32[11008,4096]{1,0}, f32[4096,11008]{1,0}, f32[4096]{0}, /*index=20*/f32[], f32[], f32[], s32[1]{0}, s32[4,640,1,3]{3,2,1,0}, /*index=25*/f32[4,640]{1,0}, f32[4,640,32000]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4096,32000]{1,0}, f32[4,640,4096]{2,1,0}, /*index=30*/f32[1,1,4096]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, f32[4,640,4096]{2,1,0}, f32[4,640,1]{2,1,0}, /*index=35*/f32[4,640,11008]{2,1,0}, f32[11008,4096]{1,0}, f32[4,640,11008]{2,1,0}, f32[4096,11008]{1,0}, f32[4,640,11008]{2,1,0}, /*index=40*/f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f32[4,640,11008]{2,1,0}, f16[4096,11008]{1,0}, f32[4,640,4096]{2,1,0}, /*index=45*/f16[11008,4096]{1,0}, f32[4,640,4096]{2,1,0}, f16[4096]{0}, f16[4096,32000]{1,0}, f32[]) tuple(f32[] %get-tuple-element.1034, s32[] %get-tuple-element.1035, s32[] %get-tuple-element.1036, f32[4096,32000]{1,0} %get-tuple-element.1037, f32[11008,4096]{1,0} %get-tuple-element.1038, /*index=5*/f32[4096,11008]{1,0} %get-tuple-element.1039, f32[4096]{0} %get-tuple-element.1040, f32[4096,32000]{1,0} %get-tuple-element.1041, f32[11008,4096]{1,0} %get-tuple-element.1042, f32[4096,11008]{1,0} %get-tuple-element.1043, /*index=10*/f32[4096]{0} %get-tuple-element.1044, s32[] %get-tuple-element.1045, f16[4096,32000]{1,0} %get-tuple-element.1046, f16[11008,4096]{1,0} %get-tuple-element.1047, f16[4096,11008]{1,0} %get-tuple-element.1048, /*index=15*/f16[4096]{0} %get-tuple-element.1049, f32[4096,32000]{1,0} %get-tuple-element.1050, f32[11008,4096]{1,0} %get-tuple-element.1051, f32[4096,11008]{1,0} %get-tuple-element.1052, f32[4096]{0} %get-tuple-element.1053, /*index=20*/f32[] %get-tuple-element.359, f32[] %get-tuple-element.360, f32[] %get-tuple-element.361, s32[1]{0} %get-tuple-element.362, s32[4,640,1,3]{3,2,1,0} %get-tuple-element.363, /*index=25*/f32[4,640]{1,0} %get-tuple-element.364, f32[4,640,32000]{2,1,0} %get-tuple-element.365, f32[4,640,4096]{2,1,0} %get-tuple-element.366, f32[4096,32000]{1,0} %get-tuple-element.367, f32[4,640,4096]{2,1,0} %get-tuple-element.368, /*index=30*/f32[1,1,4096]{2,1,0} %get-tuple-element.369, f32[4,640,4096]{2,1,0} %get-tuple-element.370, f32[4,640,1]{2,1,0} %get-tuple-element.371, f32[4,640,4096]{2,1,0} %get-tuple-element.372, f32[4,640,1]{2,1,0} %get-tuple-element.373, /*index=35*/f32[4,640,11008]{2,1,0} %get-tuple-element.374, f32[11008,4096]{1,0} %get-tuple-element.375, f32[4,640,11008]{2,1,0} %get-tuple-element.376, f32[4096,11008]{1,0} %get-tuple-element.377, f32[4,640,11008]{2,1,0} %get-tuple-element.378, /*index=40*/f32[4,640,11008]{2,1,0} %get-tuple-element.379, f32[4,640,11008]{2,1,0} %get-tuple-element.380, f32[4,640,11008]{2,1,0} %get-tuple-element.586, f16[4096,11008]{1,0} %get-tuple-element.587, f32[4,640,4096]{2,1,0} %get-tuple-element.588, /*index=45*/f16[11008,4096]{1,0} %get-tuple-element.589, f32[4,640,4096]{2,1,0} %get-tuple-element.590, f16[4096]{0} %get-tuple-element.591, f16[4096,32000]{1,0} %get-tuple-element.592, f32[] %get-tuple-element.1054)
}


